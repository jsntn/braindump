<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Index on Jason's Braindump</title><link>https://jason.haikebang.com/</link><description>Recent content in Index on Jason's Braindump</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 25 Apr 2021 23:40:42 +0800</lastBuildDate><atom:link href="https://jason.haikebang.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Emacs Stuff</title><link>https://jason.haikebang.com/posts/emacs/</link><pubDate>Mon, 16 Aug 2021 16:40:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/emacs/</guid><description>How to learn Emacs? 怎样学习 Emacs？ Master Emacs in One Year Emacs 入门指南：Why &amp;amp; How Useful posts 田春（冰河）日记节选 Some interesting sites powered by Emacs An Amateur Programmer&amp;rsquo;s Blogs Read more Emacs on Windows Emacs on Arch Linux Use Org-mode to track your habits</description></item><item><title>Nix</title><link>https://jason.haikebang.com/posts/nix/</link><pubDate>Thu, 05 Aug 2021 09:36:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/nix/</guid><description>Nix is a tool that takes a unique approach to package management and system configuration.
-&amp;gt; https://nixos.org
Reproducible Nix builds packages in isolation from each other. This ensures that they are reproducible and don&amp;rsquo;t have undeclared dependencies, so if a package works on one machine, it will also work on another.
Declarative Nix makes it trivial to share development and build environments for your projects, regardless of what programming languages and tools you’re using.</description></item><item><title>GitHub Emacs Action</title><link>https://jason.haikebang.com/posts/github-emacs-action/</link><pubDate>Wed, 04 Aug 2021 18:05:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/github-emacs-action/</guid><description>This is a GitHub Action example to set up Emacs with your packages.
Since that Emacs setup uses Nix, Nix will be installed automatically if necessary, along with the &amp;ldquo;cachix&amp;rdquo; tool which enables downloads of the cached binaries. (via)
-&amp;gt; https://github.com/jsntn/emacs-actions
The &amp;lsquo;ox-publish&amp;rsquo; case -&amp;gt; https://github.com/jsntn/emacs-actions/tree/ox-publish
It uses GitHub Action @peaceiris/actions-gh-pages to deploy static files to GitHub Pages. This deploy action can be combined simply and freely with Static Site Generators.</description></item><item><title>Cloud Native Definition</title><link>https://jason.haikebang.com/posts/cloud-native/</link><pubDate>Tue, 20 Jul 2021 10:55:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/cloud-native/</guid><description>Cloud native technologies empower organizations to build and run scalable applications in modern, dynamic environments such as public, private, and hybrid clouds. Containers, service meshes, microservices, immutable infrastructure, and declarative APIs exemplify this approach.
These techniques enable loosely coupled systems that are resilient, manageable, and observable. Combined with robust automation, they allow engineers to make high-impact changes frequently and predictably with minimal toil.
The Cloud Native Computing Foundation seeks to drive adoption of this paradigm by fostering and sustaining an ecosystem of open source, vendor-neutral projects.</description></item><item><title>How To Take Smart Notes</title><link>https://jason.haikebang.com/posts/how-to-take-smart-notes/</link><pubDate>Sat, 17 Jul 2021 22:01:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/how-to-take-smart-notes/</guid><description>卢曼的“卡片盒”与传统的卡片笔记的最大区别是什么呢？ 我之前在《纳博科夫的卡片》等文章中，曾介绍过纳博科夫等人的卡片写作法。那么，卢曼与他们的最大区别是什么呢？
——多了一个盒子。
传统的卡片写作法，像纳博科夫，是只使用一个盒子，用一个盒子来保存自己写作的内容。而卢曼多了一个盒子，对自己卡片写作的内容进行索引和整理。如果说纳博科夫的卡片写作法特别合适创意写作，比如写小说、诗歌、散文等等；那么卢曼卡片盒写作法则尤其合适学术写作与信息密度大的写作，比如论文、学术专著与长篇科普等。
从认知科学角度来讲，卢曼的这种做法是极其聪明的。认知科学家将人的信息加工分为两大类，第一类是一阶操作，也就是“认知”本身，你感知的、你记忆的、你学习的、你思考的。第二类是二阶操作，称之为“元认知”，即对自己当前的认知进行监控：“我当前感知到了什么？我当前在记忆什么？我当前在学习什么？我当前在思考什么？”这就是元感知、元记忆、元学习、元思考等。“元认知”也就是认知的认知。
卢曼卡片盒写作法通过新增加的这个盒子，能够更好地对“元认知”的内容进行保存和加工。一个盒子用于保存内容本身；一个盒子用于监控内容。
卢曼卡片盒写作法的高明之处还不仅于此。更重要的是，他让卡片与卡片通过各种索引关联起来，从而提高了记忆提取的效率。
卢曼经常使用的索引可以分为四类 卢曼经常使用的索引可以分为以下四类。
第一类是主题索引。当某个主题的内容积累得足够丰富，卢曼就会做一张主题索引卡，对这个主题进行概览。主题索引卡上会汇集所有相关笔记的编码或链接，每条笔记会用一两个词或一个短句简要说明核心内容。这类索引，相当于给了你一个进入某一主题的入口。
第二类与主题索引类似，只不过不是对某一主题的概览，而是针对盒子里相近位置的卡片所涉及的所有不同主题进行概览。
第三类是在当前卡片上做索引，标明这条笔记逻辑上的前一条是什么、后一条是什么（这些卡片在盒子里的位置可能并不挨着）。
第四类，也是最常用的索引形式，就是简单的“笔记-笔记”连接。两条笔记可能完全没有关系，把它们关联在一起，往往会产生出乎意料的新思路。
通过这些关联操作，我们能更好地对卡片内容进行组合、拼接、提取，从而产生更高质量的内容。</description></item><item><title>What is good product? - Allen Zhang 2019</title><link>https://jason.haikebang.com/posts/allen-zhang-2019/</link><pubDate>Wed, 14 Jul 2021 16:12:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/allen-zhang-2019/</guid><description>出自张小龙 2019 微信公开课
在很多年以前，当用苹果的手机，会研究苹果为什么能够设计出这么好的产品出来，我们当时看了很多的书，我当时也特别推崇乔布斯到底从哪里学习了这些。然后发现苹果产品的设计来自于博朗公司设计师的一些理念，这一位设计师叫拉姆斯，他提到好的设计的 10 个原则，在这里把 10 个原则念给大家听一下，大家可以做一下对比，什么是好的产品。
好的产品是有创意的，必须是一个创新的东西。
好的产品是有用的，它不是没有用的东西，要对人必须有用。
好的产品是优美的，它必须优美感很美，你会喜欢它。
好的产品非常容易使用，不难用，没有说明书一看就会。
一个好的产品是含蓄的，并不招摇的，含蓄，大家体会什么是含蓄。
好的产品是诚实的，我们经常说要对用户很诚实，大家更容易理解一个 APP 什么样是诚实的，但是不知道这个原则对于硬件产品，怎么对用户保持诚实。
一个好的产品经久不衰，不会随着时间的流逝迅速消亡。
一个好的产品不会放过任何一个细节。
一个好的产品是环保的，或者说是不浪费太多资源的。
好的产品会尽可能少的体现他的设计或者说少即是多。
这是当时拉姆斯对硬件产品 10 个设计的原则，我只是把它偷换了一下概念，把它转化为通用的或者软件产品，它什么样是一个好的产品，套过来照样实用。只不过在目前的互联网来说，大家更关心的是流量，是变现，所以大家很久不会去想，什么样的是一个好的产品。</description></item><item><title>What is Spike?</title><link>https://jason.haikebang.com/posts/spike/</link><pubDate>Mon, 12 Jul 2021 15:06:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/spike/</guid><description>What is Spike? A spike is a product development method originating from Extreme Programming that uses the simplest possible program to explore potential solutions. It is used to determine how much work will be required to solve or work around a software issue. Typically, a &amp;ldquo;spike test&amp;rdquo; involves gathering additional information or testing for easily reproduced edge cases. The term is used in agile software development approaches like Scrum or Extreme Programming.</description></item><item><title>Use Org-mode to track your habits</title><link>https://jason.haikebang.com/posts/use-org-mode-to-track-your-habits/</link><pubDate>Tue, 29 Jun 2021 12:49:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/use-org-mode-to-track-your-habits/</guid><description>Setup ; keep track of when a certain TODO item was marked as done (setq org-log-done &amp;#39;time) ; record a note along with the timestamp (setq org-log-done &amp;#39;note) ; reference: ; ... https://orgmode.org/guide/Progress-Logging.html ; ... https://www.gnu.org/software/emacs/manual/html_node/org/Closing-items.html (require &amp;#39;org-habit) ;; log into LOGBOOK drawer (setq org-log-into-drawer t) Habit properties A habit has the following properties:
The habit is a TODO item, with a TODO keyword representing an open state.</description></item><item><title>Org-mode Repeated Tasks</title><link>https://jason.haikebang.com/posts/org-mode-repeated-tasks/</link><pubDate>Tue, 29 Jun 2021 12:43:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/org-mode-repeated-tasks/</guid><description>Repeated tasks Some tasks need to be repeated again and again, this is called &amp;lsquo;Repeated Tasks&amp;rsquo; here.
The repeater Org mode helps to organize repeated tasks using a so-called repeater in a &amp;lsquo;DEADLINE&amp;rsquo;, &amp;lsquo;SCHEDULED&amp;rsquo;, or plain timestamps. In the following example:
** TODO Pay the rent DEADLINE: &amp;lt;2005-10-01 Sat +1m&amp;gt; the +1m is a repeater; the intended interpretation is that the task has a deadline on &amp;lsquo;&amp;lt;2005-10-01 Sat&amp;gt;&amp;rsquo; and repeats itself every (one) month starting from that time.</description></item><item><title>Make Git Repository Smaller</title><link>https://jason.haikebang.com/posts/make-git-repo-smaller/</link><pubDate>Mon, 28 Jun 2021 00:17:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/make-git-repo-smaller/</guid><description>Background I&amp;rsquo;ve got a git repository that I make automated commits multiple times a day, but now the local git repository is getting bigger and bigger. I&amp;rsquo;m wondering what the easiest way would be to slim down my local repository. Is there a way to remove older commits to slim down my repository size?
Solution Get the commits which you need to keep, like the master branch starting from this year,</description></item><item><title>Use Org-mode to manage quite a life</title><link>https://jason.haikebang.com/posts/use-org-mode-to-manage-quite-a-life/</link><pubDate>Fri, 18 Jun 2021 23:05:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/use-org-mode-to-manage-quite-a-life/</guid><description>《奇特的一生》是一本传记体小说，描述了俄罗斯科学家柳比歇夫如何运用时间统计法度过了他的一生。所谓时间统计法，说起来实在不起眼：统计自己做每件事情的纯时间，“工作中的任何间歇，我都要创除。我计算的是纯时间，”柳比歇夫写道，“纯时间要比毛时间少得多。所谓毛时间，就是你花在这项工作上的时间。” 柳比歇夫典型的时间统计日记是这样的：
乌里扬诺夫斯克。1964 年 4 月 8 日。分类昆虫学：鉴定袋蛾，结束——2 小时 20 分。开始写关于袋蛾的报告——1 小时 5 分（1.0）。 附加工作：给达维陀娃和布里亚赫尔写信，6 页——3 小时 20 分（0.5）。 路途往返——0.5。 休息——剃胡子。《乌里扬诺夫斯克真理报》——15 分，《消息报》——10 分，《文学报》——20分；阿・托尔斯泰的《吸血鬼》，66 页——1 小时 30 分。听里姆斯基・柯萨科夫的《沙皇的未婚妻》。 基本工作合计——6 小时 45 分。 其中记录了一天当中各项活动花费的“纯时间”，最后合计了第一类工作（科研活动）的时间。此外，每月和每年，柳比歇夫都对自己的时间统计日记进行进一步汇总统计，将自己时间的花费清楚明了地列于眼前。正是这样一个简单的方法帮助柳比歇夫实现了“奇特的一生”。通常，柳比歇夫每天能有七、八个小时的纯学术工作时间，最高纪录是十一小时三十分。
我们每个人一天的纯工作时间到底有多少呢？约摸估算一番，我想能达到柳比歇夫这个数字的少之又少。两小时？三小时？事实上，因为人对自己时间利用的估计是如此的不靠谱，实际的纯工作时间可能比你想像得还要少得多。物理学家 Michael Nielsen 在一篇文章中写道：
一个同事曾告诉我，他的一个朋友在一段时间里用码表记录自己每周做研究工作的时间。令他震惊的是，除去每天当中他陷入的所有其他事情——中断，邮件，上网，电话，没成效的会议，和朋友聊天等，他平均每天只用了半小时在研究工作上。如果说这是许多研究者的典型情况，我并不对此感到意外。
彼德・德鲁克在《卓有成效的管理者》中也谈到：
某公司的董事长，十分肯定地对我说他的时间大致分成三个部分：1/3 用于与公司高级管理人员研讨业务；1/3 用于接待重要客户；其余 1/3 则用于参加各种社会活动。但是，等实际记录了六个星期之后，跟他原来的估计比较，结果发现在上述三个方面，他几乎没花什么时间……这份时间记录是由他的秘书记下来的，当秘书把记录送给他看时，他简直一点儿都不能相信。
因此，看似简单的时间统计法恰恰蕴含了深刻的力量。唯有通过实际的统计数字，我们才能自知。我刚知道这个方法时，试过在纸上记录做每件事的起止时间，但总觉得统计起来麻烦。但事实上，不做统计，根本没法发挥这个方法的真正效果。
Org-mode Agenda 为了使用 Org-mode 的日程表功能，首先需要把 xxx.org 加入到日程表文件中，例如 todo.org, 在配置文件（ ~/.emacs ）中写入:
(setq org-agenda-files (list &amp;#34;~/org/todo.org&amp;#34;)) 再绑定Org-mode日程表的快捷键，
(global-set-key &amp;#34;\C-ca&amp;#34; &amp;#39;org-agenda) 这样按 Ctrl-c a a 就可以查看 Org-mode 的周日程表了。</description></item><item><title>Self-signed CA(Certificate Authority)</title><link>https://jason.haikebang.com/posts/selfsigned-ca/</link><pubDate>Wed, 16 Jun 2021 10:56:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/selfsigned-ca/</guid><description>Install the OpenSSL OpenSSL is a built-in package on macOS, while on Linux distributions, you need to install it manually. Like Ubuntu,
apt install openssl Use openssl x509 to sign the CA Generate a new private key and Certificate Signing Request
mkdir cert &amp;amp;&amp;amp; cd cert openssl genrsa -out ca.key 2048 openssl req -new -sha256 -key ca.key -out ca.csr Generate a self-signed certificate
openssl x509 -req -sha256 -days 3650 -in ca.</description></item><item><title>Zettelkasten Note-taking Method</title><link>https://jason.haikebang.com/posts/zettelkasten/</link><pubDate>Fri, 11 Jun 2021 16:43:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/zettelkasten/</guid><description>The Zettelkasten method was made famous by Niklas Luhmann, who was a German sociologist who published over 70 books and 400 academic articles (Ahrens, 2017, pp.30). Luhmann credited his achievements to his Zettelkasten, which contained over 90,000 ideas that helped him develop topics by knitting together ideas into a cohesive whole. His books wrote themselves, idea by idea. Even after his death, Luhmann&amp;rsquo;s ideas were combined to publish more books on his behalf.</description></item><item><title>Use Org-roam to manage project in an effective way</title><link>https://jason.haikebang.com/posts/org-roam-and-project/</link><pubDate>Fri, 11 Jun 2021 14:21:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/org-roam-and-project/</guid><description>The Note Type of Zettelkasten Fleeting Notes Literature Notes Permanent Notes Project Notes The Note Type of Your Project Compare to the note type of Zettelkasten, the note type of our project should be different as project notes/items are normally generated and used as project goes by, and the notes can be abandoned/archived once the project is over, at least for most of notes/items.
In this case, we can say most of them are Fleeting Notes, for the notes can be considered as Literature or Permanent ones, those should be taken carefully to the personal notebook but not the project notebook.</description></item><item><title>Note-taking</title><link>https://jason.haikebang.com/posts/note-taking/</link><pubDate>Fri, 11 Jun 2021 14:12:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/note-taking/</guid><description>Bullet Journal A bullet journal is a method of personal organization developed by designer Ryder Carroll. The system organizes scheduling, reminders, to-do lists, brainstorming, and other organizational tasks into a single notebook.
-&amp;gt; https://bulletjournal.com
Org-mode Org-roam Org-roam is a tool for network thought. It reproduces some of Roam Research&amp;rsquo;s features within the all-powerful Org-mode.
Org-roam is a solution for effortless non-hierarchical note-taking with Org-mode. With Org-roam, notes flow naturally, making note-taking fun and easy.</description></item><item><title>VeraCrypt on MacOS</title><link>https://jason.haikebang.com/posts/veracrypt-on-macos/</link><pubDate>Wed, 09 Jun 2021 17:33:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/veracrypt-on-macos/</guid><description>How to execute veracrypt command line? The command is actually /Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt.
While there should always be an elegant way to use it!
You can set up a symbolic link named veracrypt to the executable. The following will work in a terminal,
mkdir -p ~/bin ; # &amp;lt;&amp;lt;-- if it doesn&amp;#39;t exist already ln -s /Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt ~/bin/veracrypt You can then invoke it to get help with (the -t is for text-only mode):</description></item><item><title>Spinnaker</title><link>https://jason.haikebang.com/posts/spinnaker/</link><pubDate>Tue, 08 Jun 2021 23:19:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/spinnaker/</guid><description>Spinnaker is a free and open-source continuous delivery software platform originally developed by Netflix and extended by Google. It is designed to work with Kubernetes, Google Cloud Platform, AWS, Microsoft Azure and Oracle Cloud. Spinnaker was developed by Netflix as a successor to the internally developed Asgard.
-&amp;gt; https://spinnaker.io/</description></item><item><title>Emacs on Arch Linux</title><link>https://jason.haikebang.com/posts/emacs-on-arch-linux/</link><pubDate>Tue, 08 Jun 2021 23:10:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/emacs-on-arch-linux/</guid><description>Arch Linux with Emacs Boot the VM on Arch Linux iso and then run the command,
wget https://raw.githubusercontent.com/jsntn/spartan-arch/my-version/install.sh -O install.sh bash install.sh [user] [password] [fast] All arguments are optional and will be prompted for if not passed on invocation:
[user] is your username [password] is what you want the root and user password to be [fast] is boolean 1 or 0 and controls using rankmirrors during set up which will be slow The install.</description></item><item><title>Compile Python Script to Binary Executable</title><link>https://jason.haikebang.com/posts/compile-python-to-binary/</link><pubDate>Tue, 08 Jun 2021 00:04:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/compile-python-to-binary/</guid><description>Reference https://stackoverflow.com/questions/12339671/how-to-compile-python-script-to-binary-executable</description></item><item><title>Emacs on Windows</title><link>https://jason.haikebang.com/posts/emacs-on-windows/</link><pubDate>Mon, 07 Jun 2021 23:05:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/emacs-on-windows/</guid><description>Installation List the Emacs installation on Windows platform.
Native Emacs VirtualBox with Emacs -&amp;gt; Emacs on Arch Linux
Dockerized Emacs Cygwin/MinGW with Emacs Chololatey Software choco install emacs Unix Utilities Encryption Shell/Term Debug If you do M-x toggle-debug-on-error, you should get a backtrace that might show where the error is occurring.
Read more https://www.gnu.org/software/emacs/manual/html%5Fmono/efaq-w32.html#Other-useful-ports https://www.emacswiki.org/emacs/EmacsMsWindowsIntegration http://ergoemacs.org/emacs/emacs%5Fenv%5Fvar%5Fpaths.html https://emacs.stackexchange.com/questions/27326/gui-emacs-sets-the-exec-path-only-from-windows-environment-variable-but-not-from Reference</description></item><item><title>How to use `make`?</title><link>https://jason.haikebang.com/posts/make/</link><pubDate>Sat, 05 Jun 2021 23:23:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/make/</guid><description>A Makefile example,
ABC.tar.gz.md5: ABC.tar.gz md5sum ABC.tar.gz &amp;gt; ABC.tar.gz.md5 ABC.tar.gz: tar -czf ABC.tar.gz ABC/ Reference:
http://www.ruanyifeng.com/blog/2015/02/make.html</description></item><item><title>Unix Utilities on Windows</title><link>https://jason.haikebang.com/posts/unix-utilities-on-windows/</link><pubDate>Sat, 05 Jun 2021 00:33:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/unix-utilities-on-windows/</guid><description>Pacage Manager Install Chocolatey on Windows by following the method from https://chocolatey.org/install
Install the Unix Utilities, like make,
choco install make Read more&amp;hellip; How to use `make`?
Recommended Packages make git gnuwin32-coreutils.install Reference http://ergoemacs.org/emacs/emacs%5Fmswin.html http://xahlee.info/mswin/xah%5Fwindows%5Fsetup.html http://xahlee.info/mswin/Windows%5Fsoftware.html</description></item><item><title>The Seven Core Competencies of Business Agility</title><link>https://jason.haikebang.com/posts/7-core-competencies/</link><pubDate>Tue, 01 Jun 2021 23:23:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/7-core-competencies/</guid><description>About SAFe
The Seven Core Competencies of Business Agility Team and Technical Agility Agile Product Delivery Enterprise Solution Delivery Lean Portfolio Management Organizational Agility Continuous Learning Culture Lean-Agile Leadership It is not enough that management commit themselves to quality and productivity, they must know what it is they must do.
Such a responsibility cannot be delegated.
&amp;ndash; W. Edwards Deming
Measure and Grow Go download the &amp;ldquo;SAFe Business Agility Assessment&amp;rdquo; from here.</description></item><item><title>What is SAFe?</title><link>https://jason.haikebang.com/posts/safe/</link><pubDate>Tue, 01 Jun 2021 22:57:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/safe/</guid><description>Scaled Agile Framework® (SAFe®) empowers complex organizations to achieve the benefits of Lean-Agile software and systems development at scale.
SAFe is the world’s leading framework for scaling Agile across the enterprise. Used by hundreds of the world’s largest organizations, SAFe sustains and drives faster time-to-market, dramatic increases in productivity and quality, and improvement in employee engagement.
SAFe is designed to help businesses continuously and more efficiently deliver value on a regular and predictable schedule.</description></item><item><title>Semantic Versioning</title><link>https://jason.haikebang.com/posts/semantic-versioning/</link><pubDate>Sat, 22 May 2021 00:20:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/semantic-versioning/</guid><description>In the world of software management there exists a dread place called &amp;ldquo;dependency hell.&amp;rdquo;
The bigger your system grows and the more packages you integrate into your software, the more likely you are to find yourself, one day, in this pit of despair.
&amp;ndash; semver.org
Summary Given a version number MAJOR.MINOR.PATCH, increment the:
MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards compatible manner, and PATCH version when you make backwards compatible bug fixes.</description></item><item><title>How to make image?</title><link>https://jason.haikebang.com/posts/how-to-make-image/</link><pubDate>Thu, 20 May 2021 23:08:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/how-to-make-image/</guid><description>For a Linux-based image to have full functionality in an OpenStack Compute cloud, there are a few requirements. For some of these, you can fulfill the requirements by installing the cloud-init package. Read this section before you create your own image to be sure that the image supports the OpenStack features that you plan to use.
Disk partitions and resize root partition on boot (cloud-init)
When you create a Linux image, you must decide how to partition the disks.</description></item><item><title>DR</title><link>https://jason.haikebang.com/posts/dr/</link><pubDate>Sat, 15 May 2021 17:02:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/dr/</guid><description>Introduction As an ordinary engineer, I was writing the DR scripts then in Japan.
The technology updating is fast and exciting!
I&amp;rsquo;m not young anymore, and I always hope that I can produce something memorable.
Solution Requirements/Design/Describe the Design Before we started the realization, we took much time on the design. Writing a program is the different concept in design software. Design is the place where software quality is established.</description></item><item><title>Timeshift on Ubuntu</title><link>https://jason.haikebang.com/posts/timeshift-on-ubuntu/</link><pubDate>Sat, 08 May 2021 23:55:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/timeshift-on-ubuntu/</guid><description>Installation sudo add-apt-repository -y ppa:teejee2008/timeshift sudo apt-get update sudo apt-get install timeshift via link
Operations sudo timeshift --create sudo timeshift --list sudo timeshift --restore --snapshot &amp;#34;2020-02-19_18-32-36&amp;#34; sudo timeshift --delete --snapshot &amp;#39;2014-10-12_16-29-08&amp;#39; via link
Read More Restore the snapshot on Linux</description></item><item><title>Linux</title><link>https://jason.haikebang.com/posts/linux/</link><pubDate>Sat, 08 May 2021 23:52:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/linux/</guid><description>Use Timeshift to manage the snapshot on Ubuntu.</description></item><item><title>Memory</title><link>https://jason.haikebang.com/posts/memory/</link><pubDate>Sat, 08 May 2021 23:18:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/memory/</guid><description>Read more -&amp;gt; Memory Palace</description></item><item><title>Recording</title><link>https://jason.haikebang.com/posts/recording/</link><pubDate>Thu, 06 May 2021 01:42:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/recording/</guid><description>About ZOOM https://www.zhihu.com/question/279930451/answer/411034575
Best lossy audio formats We spoke to Ben Westgarth, senior audio software engineer at NCH Software, about the best lossy audio formats for archiving a music collection. He told us there&amp;rsquo;s a contentious debate about the topic among industry professionals and casual users, but there is a clear winner in terms of file size to sound quality ratio. &amp;ldquo;It is widely considered that AAC is a superior format - it can compress to a smaller size for the same quality when compared to MP3.</description></item><item><title>EDC</title><link>https://jason.haikebang.com/posts/edc/</link><pubDate>Thu, 06 May 2021 01:23:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/edc/</guid><description>EDC
Everyday Carry
Brands Fat Bear Pelican UAG Reference https://www.zhihu.com/question/19808099</description></item><item><title>Encryption</title><link>https://jason.haikebang.com/posts/encryption/</link><pubDate>Mon, 03 May 2021 17:24:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/encryption/</guid><description>Encryption is the method by which information is converted into secret code that hides the information&amp;rsquo;s true meaning. The science of encrypting and decrypting information is called cryptography. In computing, unencrypted data is also known as plaintext, and encrypted data is called ciphertext.
Cryptomator https://cn.apkjam.com/cryptomator.html https://jsntn.com/software/portable-cryptomator.html Mountain Duck Mountain Duck lets you mount server and cloud storage as a disk in Finder on macOS and the File Explorer on Windows.</description></item><item><title>OpenStack</title><link>https://jason.haikebang.com/posts/openstack/</link><pubDate>Sat, 01 May 2021 16:58:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/openstack/</guid><description>FAQ How to make image? TODO What is the Cloud Image? Boot an instance from an ISO image https://docs.openstack.org/ocata/user-guide/cli-nova-launch-instance-using-ISO-image.html
Troubleshooting The main troubleshooting method about OpenStack is checking through the logs.
Network What is physical network in OpenStack? The OpenStack Networking services can either run together on the same physical server, or on separate dedicated servers, which are named according to their roles:
Controller node - The server that runs API service.</description></item><item><title>OpenStack Logs</title><link>https://jason.haikebang.com/posts/openstack-logs/</link><pubDate>Sat, 01 May 2021 16:58:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/openstack-logs/</guid><description>Keystone Logs /var/log/apache2/keystone.log /var/log/apache2/keystone_access.log If you would like to check more detailed logs, go enable the debug option in /etc/keystone/keystone.conf.
Glance Logs /var/log/apache2/glanceapi.log /var/log/apache2/glanceregistry.log If you would like to check more detailed logs, go enable the debug option in /etc/glance/*.conf.</description></item><item><title>Android</title><link>https://jason.haikebang.com/posts/android/</link><pubDate>Sat, 01 May 2021 16:57:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/android/</guid><description>⊕ https://cn.apkjam.com</description></item><item><title>English</title><link>https://jason.haikebang.com/posts/english/</link><pubDate>Sat, 01 May 2021 16:57:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/english/</guid><description>⊕https://giveupenglish.com
Links The LYCE Digitization Project YouTube 上面的一些值得推荐的英语学习频道 那些值得推荐的外语学习网站 一些值得推荐的英语学习资源</description></item><item><title>Kubernetes</title><link>https://jason.haikebang.com/posts/k8s/</link><pubDate>Mon, 26 Apr 2021 16:54:00 +0800</pubDate><guid>https://jason.haikebang.com/posts/k8s/</guid><description>Online Tutorials https://kubernetes.io/docs/tutorials/kubernetes-basics/ https://kubernetes.io/zh/docs/tutorials/kubernetes-basics/
CONCEPT Cluster Master Node Pod Controller</description></item><item><title>Search Results</title><link>https://jason.haikebang.com/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jason.haikebang.com/search/</guid><description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description></item><item><title>Taxonomies Result</title><link>https://jason.haikebang.com/tax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jason.haikebang.com/tax/</guid><description/></item></channel></rss>