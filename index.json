[{"categories":null,"contents":"Install the OpenSSL OpenSSL is a built-in package on macOS, while on Linux distributions, you need to install it manually. Like Ubuntu,\napt install openssl Use openssl x509 to sign the CA   Generate a new private key and Certificate Signing Request\nmkdir cert \u0026amp;\u0026amp; cd cert openssl genrsa -out ca.key 2048 openssl req -new -sha256 -key ca.key -out ca.csr   Generate a self-signed certificate\nopenssl x509 -req -sha256 -days 3650 -in ca.csr -signkey ca.key -out ca.crt   Convert a certificate file and a private key to PKCS#12 (.p12)\nopenssl pkcs12 -export -clcerts -in ca.crt -inkey ca.key -out ca.p12 -password pass:\u0026lt;password\u0026gt;   Encode PKCS#12 as Base64\nbase64 -w 0 ca.p12   Use openssl ca to sign the CA TODO: placeholder\nReference  https://blog.hly0928.com/post/generate-ca-root-cert-for-surge/ https://www.sslshopper.com/article-most-common-openssl-commands.html  ","permalink":"https://jason.haikebang.com/posts/selfsigned-ca/","tags":null,"title":"Self-signed CA(Certificate Authority)"},{"categories":null,"contents":" The Zettelkasten method was made famous by Niklas Luhmann, who was a German sociologist who published over 70 books and 400 academic articles (Ahrens, 2017, pp.30). Luhmann credited his achievements to his Zettelkasten, which contained over 90,000 ideas that helped him develop topics by knitting together ideas into a cohesive whole. His books wrote themselves, idea by idea. Even after his death, Luhmann\u0026rsquo;s ideas were combined to publish more books on his behalf.\nThe word Zettelkasten is German for \u0026ldquo;slip box\u0026rdquo;, which refers to a box containing many slips of paper (Ahrens, 2017). Each slip represents a single, atomic idea that makes sense by itself, and also in combination with other ideas (similar to how our brain works, but with a better memory).\n Reference  https://zettelkasten.de/introduction/ https://www.youtube.com/watch?v=rOSZOCoqOo8 https://medium.com/@rebeccawilliams9941/the-zettelkasten-method-examples-to-help-you-get-started-8f8a44fa9ae6  ","permalink":"https://jason.haikebang.com/posts/zettelkasten/","tags":null,"title":"Zettelkasten Note-Taking Method"},{"categories":null,"contents":"The Note Type of Zettelkasten  Fleeting Notes Literature Notes Permanent Notes Project Notes  The Note Type of Your Project Compare to the note type of Zettelkasten, the note type of our project should be different as project notes/items are normally generated and used as project goes by, and the notes can be abandoned/archived once the project is over, at least for most of notes/items.\nIn this case, we can say most of them are Fleeting Notes, for the notes can be considered as Literature or Permanent ones, those should be taken carefully to the personal notebook but not the project notebook.\nThe Principles of Project with Org-roam  One note for one task/activity Keep the persons involved in the note Remove/archive the note once the task/activity is done  ","permalink":"https://jason.haikebang.com/posts/org-roam-and-project/","tags":null,"title":"Use Org-roam to manage project in an effective way"},{"categories":null,"contents":"Bullet Journal  A bullet journal is a method of personal organization developed by designer Ryder Carroll. The system organizes scheduling, reminders, to-do lists, brainstorming, and other organizational tasks into a single notebook.\n -\u0026gt; https://bulletjournal.com\nOrg-mode Org-roam  Org-roam is a tool for network thought. It reproduces some of Roam Research\u0026rsquo;s features within the all-powerful Org-mode.\nOrg-roam is a solution for effortless non-hierarchical note-taking with Org-mode. With Org-roam, notes flow naturally, making note-taking fun and easy. Org-roam keeps closely to Org syntax, and will work for anyone already using Org-mode for their personal wiki.\n -\u0026gt; https://www.orgroam.com/manual.html\nRead more,\n Use Org-roam to manage project in an effective way  Read More  How to Take Smart Notes?  Discuss Community  https://haikebang.org/c/note-taking/  ","permalink":"https://jason.haikebang.com/posts/note-taking/","tags":null,"title":"Note-taking"},{"categories":null,"contents":"How to execute veracrypt command line? The command is actually /Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt.\nWhile there should always be an elegant way to use it!\nYou can set up a symbolic link named veracrypt to the executable. The following will work in a terminal,\nmkdir -p ~/bin ; # \u0026lt;\u0026lt;-- if it doesn\u0026#39;t exist already ln -s /Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt ~/bin/veracrypt You can then invoke it to get help with (the -t is for text-only mode):\nPATH=\u0026#34;$HOME/bin:$PATH\u0026#34; ; # \u0026lt;\u0026lt;-- if not already on your search path veracrypt -t -h Reference  https://apple.stackexchange.com/questions/230520/how-to-execute-veracrypt-on-the-command-line https://sourceforge.net/p/veracrypt/discussion/technical/thread/5dfac090/  ","permalink":"https://jason.haikebang.com/posts/veracrypt-on-macos/","tags":null,"title":"VeraCrypt on MacOS"},{"categories":null,"contents":" Spinnaker is a free and open-source continuous delivery software platform originally developed by Netflix and extended by Google. It is designed to work with Kubernetes, Google Cloud Platform, AWS, Microsoft Azure and Oracle Cloud. Spinnaker was developed by Netflix as a successor to the internally developed Asgard.\n -\u0026gt; https://spinnaker.io/\n","permalink":"https://jason.haikebang.com/posts/spinnaker/","tags":null,"title":"Spinnaker"},{"categories":null,"contents":"Arch Linux with Emacs Boot the VM on Arch Linux iso and then run the command,\nwget https://raw.githubusercontent.com/jsntn/spartan-arch/my-version/install.sh -O install.sh bash install.sh [user] [password] [fast] All arguments are optional and will be prompted for if not passed on invocation:\n [user] is your username [password] is what you want the root and user password to be [fast] is boolean 1 or 0 and controls using rankmirrors during set up which will be slow  The install.sh script will run and then reboot the computer once done.\n-\u0026gt; https://github.com/jsntn/spartan-arch/tree/my-version\nInstall Packages Load Linux dotfiles ","permalink":"https://jason.haikebang.com/posts/emacs-on-arch-linux/","tags":null,"title":"Emacs on Arch Linux"},{"categories":null,"contents":"Reference  https://stackoverflow.com/questions/12339671/how-to-compile-python-script-to-binary-executable  ","permalink":"https://jason.haikebang.com/posts/compile-python-to-binary/","tags":null,"title":"Compile Python Script to Binary Executable"},{"categories":null,"contents":"Installation List the Emacs installation on Windows platform.\nNative Emacs VirtualBox with Emacs -\u0026gt; Emacs on Arch Linux\nDockerized Emacs Cygwin/MinGW with Emacs Chololatey Software choco install emacs Unix Utilities Encryption Shell/Term Reference ","permalink":"https://jason.haikebang.com/posts/emacs-on-windows/","tags":null,"title":"Emacs on Windows"},{"categories":null,"contents":"A Makefile example,\nABC.tar.gz.md5: ABC.tar.gz md5sum ABC.tar.gz \u0026gt; ABC.tar.gz.md5 ABC.tar.gz: tar -czf ABC.tar.gz ABC/  Reference:\n http://www.ruanyifeng.com/blog/2015/02/make.html  ","permalink":"https://jason.haikebang.com/posts/make/","tags":null,"title":"How to use `make`?"},{"categories":null,"contents":"Pacage Manager Install Chocolatey on Windows by following the method from https://chocolatey.org/install\nInstall the Unix Utilities, like make,\nchoco install make Read more\u0026hellip; How to use `make`?\nRecommended Packages  make git gnuwin32-coreutils.install  Reference  http://ergoemacs.org/emacs/emacs%5Fmswin.html http://xahlee.info/mswin/xah%5Fwindows%5Fsetup.html http://xahlee.info/mswin/Windows%5Fsoftware.html  ","permalink":"https://jason.haikebang.com/posts/unix-utilities-on-windows/","tags":null,"title":"Unix Utilities on Windows"},{"categories":null,"contents":"About SAFe\nThe Seven Core Competencies of Business Agility  Team and Technical Agility Agile Product Delivery Enterprise Solution Delivery Lean Portfolio Management Organizational Agility Continuous Learning Culture Lean-Agile Leadership   It is not enough that management commit themselves to quality and productivity, they must know what it is they must do.\nSuch a responsibility cannot be delegated.\n\u0026ndash; W. Edwards Deming\n Measure and Grow Go download the \u0026ldquo;SAFe Business Agility Assessment\u0026rdquo; from here.\nReference  https://www.scaledagileframework.com/business-agility/ https://www.scaledagileframework.com/measure-and-grow/  ","permalink":"https://jason.haikebang.com/posts/7-core-competencies/","tags":null,"title":"The Seven Core Competencies of Business Agility"},{"categories":null,"contents":" Scaled Agile Framework® (SAFe®) empowers complex organizations to achieve the benefits of Lean-Agile software and systems development at scale.\n SAFe is the world’s leading framework for scaling Agile across the enterprise. Used by hundreds of the world’s largest organizations, SAFe sustains and drives faster time-to-market, dramatic increases in productivity and quality, and improvement in employee engagement.\nSAFe is designed to help businesses continuously and more efficiently deliver value on a regular and predictable schedule. It provides a knowledge base of proven, integrated principles and practices to support enterprise agility.\n Those who master large-scale software delivery will define the economic landscape of the 21st century. - Mik Kersten\n  Reference\n https://www.scaledagile.com/enterprise-solutions/what-is-safe/  ","permalink":"https://jason.haikebang.com/posts/safe/","tags":null,"title":"What is SAFe?"},{"categories":null,"contents":" In the world of software management there exists a dread place called \u0026ldquo;dependency hell.\u0026rdquo;\nThe bigger your system grows and the more packages you integrate into your software, the more likely you are to find yourself, one day, in this pit of despair.\n\u0026ndash; semver.org\n Summary Given a version number MAJOR.MINOR.PATCH, increment the:\n MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards compatible manner, and PATCH version when you make backwards compatible bug fixes.  Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.\nSemantic Versioning Specification (SemVer)  A normal version number MUST take the form X.Y.Z where X, Y, and Z are non-negative integers, and MUST NOT contain leading zeroes. X is the major version, Y is the minor version, and Z is the patch version. Each element MUST increase numerically. For instance: 1.9.0 -\u0026gt; 1.10.0 -\u0026gt; 1.11.0. Once a versioned package has been released, the contents of that version MUST NOT be modified. Any modifications MUST be released as a new version. Major version zero (0.y.z) is for initial development. Anything MAY change at any time. The public API SHOULD NOT be considered stable. Version 1.0.0 defines the public API. The way in which the version number is incremented after this release is dependent on this public API and how it changes. Patch version Z (x.y.Z | x \u0026gt; 0) MUST be incremented if only backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior. Minor version Y (x.Y.z | x \u0026gt; 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API. It MUST be incremented if any public API functionality is marked as deprecated. It MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented. Major version X (X.y.z | X \u0026gt; 0) MUST be incremented if any backwards incompatible changes are introduced to the public API. It MAY also include minor and patch level changes. Patch and minor version MUST be reset to 0 when major version is incremented. A pre-release version MAY be denoted by appending a hyphen and a series of dot separated identifiers immediately following the patch version. Identifiers MUST comprise only ASCII alphanumerics and hyphens [0-9A-Za-z-]. Identifiers MUST NOT be empty. Numeric identifiers MUST NOT include leading zeroes. Pre-release versions have a lower precedence than the associated normal version. A pre-release version indicates that the version is unstable and might not satisfy the intended compatibility requirements as denoted by its associated normal version. Examples: 1.0.0-alpha, 1.0.0-alpha.1, 1.0.0-0.3.7, 1.0.0-x.7.z.92, 1.0.0-x-y-z.–.  FAQ How do I know when to release 1.0.0? If your software is being used in production, it should probably already be 1.0.0. If you have a stable API on which users have come to depend, you should be 1.0.0. If you’re worrying a lot about backwards compatibility, you should probably already be 1.0.0.\nReference  https://semver.org https://en.wikipedia.org/wiki/Software%5Fversioning What “version naming convention” do you use? Software Build \u0026amp; Release Versioning Strategy Semver cheatsheet Semantic Versioning Cheatsheet Semver check https://docs.npmjs.com/about-semantic-versioning npm semver calculator 软件版本命名规范及各阶段说明  ","permalink":"https://jason.haikebang.com/posts/semantic-versioning/","tags":["software"],"title":"Semantic Versioning"},{"categories":null,"contents":"For a Linux-based image to have full functionality in an OpenStack Compute cloud, there are a few requirements. For some of these, you can fulfill the requirements by installing the cloud-init package. Read this section before you create your own image to be sure that the image supports the OpenStack features that you plan to use.\n  Disk partitions and resize root partition on boot (cloud-init)\nWhen you create a Linux image, you must decide how to partition the disks. The choice of partition method can affect the resizing functionality, as described in the following sections.\nThe size of the disk in a virtual machine image is determined when you initially create the image. However, OpenStack lets you launch instances with different size drives by specifying different flavors. For example, if your image was created with a 5 GB disk, and you launch an instance with a flavor of m1.small. The resulting virtual machine instance has, by default, a primary disk size of 20 GB. When the disk for an instance is resized up, zeros are just added to the end.\nYour image must be able to resize its partitions on boot to match the size requested by the user. Otherwise, after the instance boots, you must manually resize the partitions to access the additional storage to which you have access when the disk size associated with the flavor exceeds the disk size with which your image was created.\nDepending on your distribution, the simplest way to support this is to install in your image:\n the cloud-init package the cloud-utils package, which, on Ubuntu and Debian, also contains the growpart tool for extending partitions  With these packages installed, the image performs the root partition resize on boot. For example, in the /etc/rc.local file.\nIf you can install the cloud-init and cloud-utils packages, we recommend that when you create your images, you create a single ext3 or ext4 partition (not managed by LVM).\n Reference:\n How to expand storage ( /dev/vda1 ) so it takes up the entire disk    No hard-coded MAC address information\nYou must remove the network persistence rules in the image because they cause the network interface in the instance to come up as an interface other than eth0. This is because your image has a record of the MAC address of the network interface card when it was first installed, and this MAC address is different each time the instance boots. You should alter the following files:\n Replace /etc/udev/rules.d/70-persistent-net.rules with an empty file (contains network persistence rules, including MAC address). Replace /lib/udev/rules.d/75-persistent-net-generator.rules with an empty file (this generates the file above). Remove the HWADDR line from /etc/sysconfig/network-scripts/ifcfg-eth0 on Fedora-based images.  Note: If you delete the network persistent rules files, you may get a udev kernel warning at boot time, which is why we recommend replacing them with empty files instead.\n  SSH server running\n Ubuntu Linux install OpenSSH server    Disable firewall\n$ sudo ufw status [sudo] password for linuxconfig: Status: inactive   Access instance using ssh public key (cloud-init)\n  Process user data and other metadata (cloud-init)\n  Paravirtualized Xen support in Linux kernel (Xen hypervisor only with Linux kernel version \u0026lt; 3.0)\n  Manage the /etc/hosts and /etc/hostname by /etc/cloud/cloud.cfg\npreserve_hostame: false # if you do not change /etc/hostname, it will be updated with the cloud # provided hostname on each boot. If you make a change, then manual # maintenance takes over, and cloud-init will not modify it. (via link)\nmanage_etc_hosts: localhost # cloud-init will generally own the 127.0.1.1 entry, and will update it to the # hostname and fqdn on every boot. All other entries will be left as is. # \u0026#39;ping `hostname`\u0026#39; will ping 127.0.1.1 (via link)\nReference:\n Set Hostname Update Etc Hosts    Delete the terminal command history\n$ sudo -i # rm ~/.bash_history # history -c # exit $ rm ~/.bash_history $ history -c $ exit  How To Clear Shell History In Ubuntu Linux    Wipe free disk space\n Export small .qcow file How to wipe free disk space in Linux? How to wipe a hard drive clean in Linux?    Convert the format of image\n convert .img to .qcow2   qemu-img convert -f raw ubuntu.img -O qcow2 ubuntu.qcow2  convert .vdi to .qcow2   qemu-img convert -f vdi ubuntu.vdi -O qcow2 ubuntu.qcow2 Reference:\n How To Convert VirtualBox Disk Image (VDI) and img to Qcow2 format    Packaging\nmd5sum ubuntu.qcow2 \u0026gt; ubuntu.qcow2.md5 tar -czf ubuntu.qcow2.tar.gz ubuntu.qcow2 ubuntu.qcow2.md5   Reference  Image requirements  ","permalink":"https://jason.haikebang.com/posts/how-to-make-image/","tags":["openstack"],"title":"How to make image?"},{"categories":null,"contents":"Introduction  As an ordinary engineer, I was writing the DR scripts then in Japan.\n The technology updating is fast and exciting!\nI\u0026rsquo;m not young anymore, and I always hope that I can produce something memorable.\nSolution Requirements/Design/Describe the Design Before we started the realization, we took much time on the design. Writing a program is the different concept in design software. Design is the place where software quality is established. Before starting of designing software, the requirements should be analyzed and specified first.\nIn the software design process, design engineering is the one of the concept. While beginning software, requirements have been analyzed and modeled. This model can be accessed for quality and improved before code is generated.\nIn a software engineering context, the first need is to develop the models of program, but not the program themselves.\nSoftware design is different from coding. At first it is very clear that, design is not coding and coding is not design. It is created from program components.\nDesign is the description of the logic, which is used in solving the problem. Coding is the language specification which is implementation of the design. It runs on the computer and, provides the expected result. (via https://www.chegg.com/homework-help/software-engineering-8th-edition-chapter-12-solutions-9780078022128)\nWhat is a good design? A good design should be the process of envisioning and defining software solutions to one or more sets of problems, and you must agree that one of the main components of software design is the software requirements analysis. while in our project, it comes from part of specifications from customer, also, since what we are working is kind of CA components, that should be considered during our whole process of solution design, I mean, we need to think about making that work better based on our product, our official solution.\nOnce we have a clear picture on the requirements analysis, we should get a couple of problem lists to solve, this is important, some of them might be the items existed in the punchlist/user storys later, and each of them should be traceable and reflected in requirements and design.\nAfter that, we can continue the solution design, design is kind of process and model, if you are working within a design team, please understand that multiple designs for the same problem can exist and will exist, while if you are working as a solo player, try to explain that to yourself could be helpful for you to find something different, like Rubber Duck Debugging from The Pragmatic Programmer.\nDesign is not coding, coding is not design. Be down-to-earth. The solution should be improved over time. The solution should be clear as much as possible. \u0026ldquo;A picture is worth a thousand words.\u0026rdquo; Timeplan/GTD Time, Scope and Cost\nSprint/Milestone Split the goal into some sprints/milestones. Roadmap Risk Analysis User Story Bash OR Python  A language is a tool, that\u0026rsquo;s it. Define the stacks and version before kickoff, and keep them aligned until the end.    COMPONENT VERSION     OS Ubuntu 16.04.7 LTS 64-bit PC (AMD64) server   Docker 20.10.6   Jenkins 2.249.1   Ansible 2.7.0   Python 3.5.2      Team Team Setup  SA Developer Tester  -\u0026gt; Who will be responsible for the deliverables packaging? the documents? and the monitoring?\nCommunication An effective communication is the precondition to effective co-operation. -\u0026gt; Is English your official language in your team?\nRole and Responsibility Clear Role is not enough, define what his responsibility should be.\nTools Using effective tools to manage the projects.\nGit, Pipeline, Jira, Teams\u0026hellip; Editor OR IDE  Vim Emacs etc.  Start Coding Keep monitoring/following-up during coding. The realization and design should always be aligned, monitored, as always.\nThe assigned tasks should be monitored and followed up.\nWe must have difficult time. Testing Use CI/CD.\nChange Request Packaging and Release  About The Deployment About Semantic Versioning  Documents Presentation and Handover Support Phase  # EOF: You\u0026rsquo;ve come a long way.\n","permalink":"https://jason.haikebang.com/posts/dr/","tags":null,"title":"DR"},{"categories":null,"contents":"Installation sudo add-apt-repository -y ppa:teejee2008/timeshift sudo apt-get update sudo apt-get install timeshift via link\nOperations sudo timeshift --create sudo timeshift --list sudo timeshift --restore --snapshot \u0026#34;2020-02-19_18-32-36\u0026#34; sudo timeshift --delete --snapshot \u0026#39;2014-10-12_16-29-08\u0026#39; via link\nRead More  Restore the snapshot on Linux  ","permalink":"https://jason.haikebang.com/posts/timeshift-on-ubuntu/","tags":null,"title":"Timeshift on Ubuntu"},{"categories":null,"contents":"Use Timeshift to manage the snapshot on Ubuntu.\n","permalink":"https://jason.haikebang.com/posts/linux/","tags":null,"title":"Linux"},{"categories":null,"contents":"Read more Memory Palace\n","permalink":"https://jason.haikebang.com/posts/memory/","tags":null,"title":"Memory"},{"categories":null,"contents":"ZOOM https://www.zhihu.com/question/279930451/answer/411034575\n","permalink":"https://jason.haikebang.com/posts/recording/","tags":null,"title":"Recording"},{"categories":null,"contents":"EDC\n Everyday Carry\n Brands  Fat Bear Pelican UAG  Reference  https://www.zhihu.com/question/19808099  ","permalink":"https://jason.haikebang.com/posts/edc/","tags":null,"title":"EDC"},{"categories":null,"contents":"Encryption is the method by which information is converted into secret code that hides the information\u0026rsquo;s true meaning. The science of encrypting and decrypting information is called cryptography. In computing, unencrypted data is also known as plaintext, and encrypted data is called ciphertext.\nCryptomator https://cn.apkjam.com/cryptomator.html\nhttps://jsntn.com/software/portable-cryptomator.html\nPassword KeePass https://haikebang.com/passphrase.html\nSaferoom https://cn.apkjam.com/60s/saferoom.html\nTrueCrypt/VeraCrypt/EDS/CryptoDisk  TrueCrypt is not secure EDS VeraCrypt on MacOS  Read More https://haikebang.com/secure-portable.html\n","permalink":"https://jason.haikebang.com/posts/encryption/","tags":null,"title":"Encryption"},{"categories":null,"contents":"FAQ  How to make image?  TODO What is the Cloud Image? Boot an instance from an ISO image https://docs.openstack.org/ocata/user-guide/cli-nova-launch-instance-using-ISO-image.html\nTroubleshooting The main troubleshooting method about OpenStack is checking through the logs.\nNetwork What is physical network in OpenStack? The OpenStack Networking services can either run together on the same physical server, or on separate dedicated servers, which are named according to their roles:\n Controller node - The server that runs API service. Network node - The server that runs the OpenStack Networking agents.  L2GW ","permalink":"https://jason.haikebang.com/posts/openstack/","tags":["openstack"],"title":"OpenStack"},{"categories":null,"contents":"Keystone Logs /var/log/apache2/keystone.log /var/log/apache2/keystone_access.log If you would like to check more detailed logs, go enable the debug option in /etc/keystone/keystone.conf.\nGlance Logs /var/log/apache2/glanceapi.log /var/log/apache2/glanceregistry.log If you would like to check more detailed logs, go enable the debug option in /etc/glance/*.conf.\n","permalink":"https://jason.haikebang.com/posts/openstack-logs/","tags":null,"title":"OpenStack Logs"},{"categories":null,"contents":"⊕ https://cn.apkjam.com\n","permalink":"https://jason.haikebang.com/posts/android/","tags":null,"title":"Android"},{"categories":null,"contents":"⊕ https://giveupenglish.com\n","permalink":"https://jason.haikebang.com/posts/english/","tags":null,"title":"English"},{"categories":null,"contents":"Online Tutorials https://kubernetes.io/docs/tutorials/kubernetes-basics/ https://kubernetes.io/zh/docs/tutorials/kubernetes-basics/\nCONCEPT Cluster Master Node Pod Controller ","permalink":"https://jason.haikebang.com/posts/k8s/","tags":null,"title":"Kubernetes"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","permalink":"https://jason.haikebang.com/search/","tags":null,"title":"Search Results"}]