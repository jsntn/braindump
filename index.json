[{"categories":null,"contents":"Nix is a tool that takes a unique approach to package management and system configuration.\n-\u0026gt; https://nixos.org\nReproducible Nix builds packages in isolation from each other. This ensures that they are reproducible and don\u0026rsquo;t have undeclared dependencies, so if a package works on one machine, it will also work on another.\nDeclarative Nix makes it trivial to share development and build environments for your projects, regardless of what programming languages and tools you’re using.\nReliable Nix ensures that installing or upgrading one package cannot break other packages. It allows you to roll back to previous versions, and ensures that no package is in an inconsistent state during an upgrade.\n","permalink":"https://jason.haikebang.com/posts/nix/","tags":null,"title":"Nix"},{"categories":null,"contents":"This is a GitHub Action example to set up Emacs with your packages.\nSince that Emacs setup uses Nix, Nix will be installed automatically if necessary, along with the \u0026ldquo;cachix\u0026rdquo; tool which enables downloads of the cached binaries. (via)\n-\u0026gt; https://github.com/jsntn/emacs-actions\nThe \u0026lsquo;ox-publish\u0026rsquo; case -\u0026gt; https://github.com/jsntn/emacs-actions/tree/ox-publish\nIt uses GitHub Action @peaceiris/actions-gh-pages to deploy static files to GitHub Pages. This deploy action can be combined simply and freely with Static Site Generators. (Hugo, MkDocs, Gatsby, mdBook, Next, Nuxt, and so on.)\nThe \u0026lsquo;ox-publish\u0026rsquo; package is managed and configured in config.el.\nThe org-html-export-to-html case -\u0026gt; https://github.com/jsntn/emacs-actions/tree/org-to-html\nA \u0026lsquo;gh-pages\u0026rsquo; deployment use case can be found from here.\nDemo  https://github.com/jsntn/note.jsntn.com https://github.com/giveupenglishOrg/sse.lyce.info https://github.com/blurtOut/bo1  ","permalink":"https://jason.haikebang.com/posts/github-emacs-action/","tags":null,"title":"GitHub Emacs Action"},{"categories":null,"contents":" Cloud native technologies empower organizations to build and run scalable applications in modern, dynamic environments such as public, private, and hybrid clouds. Containers, service meshes, microservices, immutable infrastructure, and declarative APIs exemplify this approach.\nThese techniques enable loosely coupled systems that are resilient, manageable, and observable. Combined with robust automation, they allow engineers to make high-impact changes frequently and predictably with minimal toil.\nThe Cloud Native Computing Foundation seeks to drive adoption of this paradigm by fostering and sustaining an ecosystem of open source, vendor-neutral projects. We democratize state-of-the-art patterns to make these innovations accessible for everyone. (via)\n Containers Service meshes Microservices Immutable infrastructure Declarative APIs ","permalink":"https://jason.haikebang.com/posts/cloud-native/","tags":null,"title":"Cloud Native Definition"},{"categories":null,"contents":"卢曼的“卡片盒”与传统的卡片笔记的最大区别是什么呢？ 我之前在《纳博科夫的卡片》等文章中，曾介绍过纳博科夫等人的卡片写作法。那么，卢曼与他们的最大区别是什么呢？\n——多了一个盒子。\n传统的卡片写作法，像纳博科夫，是只使用一个盒子，用一个盒子来保存自己写作的内容。而卢曼多了一个盒子，对自己卡片写作的内容进行索引和整理。如果说纳博科夫的卡片写作法特别合适创意写作，比如写小说、诗歌、散文等等；那么卢曼卡片盒写作法则尤其合适学术写作与信息密度大的写作，比如论文、学术专著与长篇科普等。\n从认知科学角度来讲，卢曼的这种做法是极其聪明的。认知科学家将人的信息加工分为两大类，第一类是一阶操作，也就是“认知”本身，你感知的、你记忆的、你学习的、你思考的。第二类是二阶操作，称之为“元认知”，即对自己当前的认知进行监控：“我当前感知到了什么？我当前在记忆什么？我当前在学习什么？我当前在思考什么？”这就是元感知、元记忆、元学习、元思考等。“元认知”也就是认知的认知。\n卢曼卡片盒写作法通过新增加的这个盒子，能够更好地对“元认知”的内容进行保存和加工。一个盒子用于保存内容本身；一个盒子用于监控内容。\n卢曼卡片盒写作法的高明之处还不仅于此。更重要的是，他让卡片与卡片通过各种索引关联起来，从而提高了记忆提取的效率。\n卢曼经常使用的索引可以分为四类 卢曼经常使用的索引可以分为以下四类。\n第一类是主题索引。当某个主题的内容积累得足够丰富，卢曼就会做一张主题索引卡，对这个主题进行概览。主题索引卡上会汇集所有相关笔记的编码或链接，每条笔记会用一两个词或一个短句简要说明核心内容。这类索引，相当于给了你一个进入某一主题的入口。\n第二类与主题索引类似，只不过不是对某一主题的概览，而是针对盒子里相近位置的卡片所涉及的所有不同主题进行概览。\n第三类是在当前卡片上做索引，标明这条笔记逻辑上的前一条是什么、后一条是什么（这些卡片在盒子里的位置可能并不挨着）。\n第四类，也是最常用的索引形式，就是简单的“笔记-笔记”连接。两条笔记可能完全没有关系，把它们关联在一起，往往会产生出乎意料的新思路。\n通过这些关联操作，我们能更好地对卡片内容进行组合、拼接、提取，从而产生更高质量的内容。\n","permalink":"https://jason.haikebang.com/posts/how-to-take-smart-notes/","tags":null,"title":"How To Take Smart Notes"},{"categories":null,"contents":" 出自张小龙 2019 微信公开课\n 在很多年以前，当用苹果的手机，会研究苹果为什么能够设计出这么好的产品出来，我们当时看了很多的书，我当时也特别推崇乔布斯到底从哪里学习了这些。然后发现苹果产品的设计来自于博朗公司设计师的一些理念，这一位设计师叫拉姆斯，他提到好的设计的 10 个原则，在这里把 10 个原则念给大家听一下，大家可以做一下对比，什么是好的产品。\n  好的产品是有创意的，必须是一个创新的东西。\n  好的产品是有用的，它不是没有用的东西，要对人必须有用。\n  好的产品是优美的，它必须优美感很美，你会喜欢它。\n  好的产品非常容易使用，不难用，没有说明书一看就会。\n  一个好的产品是含蓄的，并不招摇的，含蓄，大家体会什么是含蓄。\n  好的产品是诚实的，我们经常说要对用户很诚实，大家更容易理解一个 APP 什么样是诚实的，但是不知道这个原则对于硬件产品，怎么对用户保持诚实。\n  一个好的产品经久不衰，不会随着时间的流逝迅速消亡。\n  一个好的产品不会放过任何一个细节。\n  一个好的产品是环保的，或者说是不浪费太多资源的。\n  好的产品会尽可能少的体现他的设计或者说少即是多。\n  这是当时拉姆斯对硬件产品 10 个设计的原则，我只是把它偷换了一下概念，把它转化为通用的或者软件产品，它什么样是一个好的产品，套过来照样实用。只不过在目前的互联网来说，大家更关心的是流量，是变现，所以大家很久不会去想，什么样的是一个好的产品。\n","permalink":"https://jason.haikebang.com/posts/allen-zhang-2019/","tags":null,"title":"What is good product? - Allen Zhang 2019"},{"categories":null,"contents":"What is Spike? A spike is a product development method originating from Extreme Programming that uses the simplest possible program to explore potential solutions. It is used to determine how much work will be required to solve or work around a software issue. Typically, a \u0026ldquo;spike test\u0026rdquo; involves gathering additional information or testing for easily reproduced edge cases. The term is used in agile software development approaches like Scrum or Extreme Programming.\nIt is a task aimed at answering a question or gathering information, rather than at producing shippable product. Sometimes a user story is generated that cannot be well estimated until the development team does some actual work to resolve a technical question or a design problem. The solution is to create a \u0026ldquo;spike\u0026rdquo;, which is some work whose purpose is to provide the answer or solution.1\nUses A spike in a sprint can be used in a number of ways:\n As a way to familiarize the team with new hardware or software To analyze a problem thoroughly and assist in properly dividing work among separate team members Spikes tests can also be used to mitigate future risk, and may uncover additional issues that have escaped notice  A distinction can be made between technical spikes and functional spikes. The technical spike is used more often for evaluating the impact new technology has on the current implementation. A functional spike is used to determine the interaction with a new feature or implementation.\nTo track such work items, in a ticketing system, a new user story can be set up for each spike, for organization purposes.\nFollowing a spike, the results (a new design, a refined workflow, etc.) are shared and discussed with the team.\nRead more In Scrum, 3 terms are usually used(or one of them):\n  Spike\n– a quick and dirty implementation, designed to be thrown away, to gain knowledge\n– indicator: unable to estimate a user story effectively\n  Research\n– broad, foundational knowledge-gaining to decide what to spike or give the ability to estimate\n– indicator: don’t know a potential solution\n  Tracer Bullet\n– very narrow implementation in production quality of an epic/large user story\n– indicator: user story is too large in estimation\n  Reference  https://en.wikipedia.org/wiki/Spike%5F(software%5Fdevelopment)    以回答问题或收集信息为目的的任务，而不是生产非专业产品的任务。有时编写 User Story 时，无法很好地对其进行估算 User Story Point，直到开发团队做一些实际工作来解决技术问题或设计问题为止。解决这一问题的方法是创建一个 “Spike”，这代表要做一些工作，其目的是提供解决问题的方法或者寻找解决问题的答案。 \u0026#x21a9;\u0026#xfe0e;\n   ","permalink":"https://jason.haikebang.com/posts/spike/","tags":null,"title":"What is Spike?"},{"categories":null,"contents":"Setup ; keep track of when a certain TODO item was marked as done (setq org-log-done \u0026#39;time) ; record a note along with the timestamp (setq org-log-done \u0026#39;note) ; reference: ; ... https://orgmode.org/guide/Progress-Logging.html ; ... https://www.gnu.org/software/emacs/manual/html_node/org/Closing-items.html (require \u0026#39;org-habit) ;; log into LOGBOOK drawer (setq org-log-into-drawer t) Habit properties A habit has the following properties:\n  The habit is a TODO item, with a TODO keyword representing an open state.\n  The property \u0026lsquo;STYLE\u0026rsquo; is set to the value \u0026lsquo;habit\u0026rsquo;. To set something as a habit, use C-c C-x p (org-set-property) to set the STYLE property to habit.\n  The TODO has a scheduled date, usually with a .+ style repeat interval. A ++ style may be appropriate for habits with time constraints, e.g., must be done on weekends, or a + style for an unusual habit that can have a backlog, e.g., weekly reports.\n  The TODO may also have minimum and maximum ranges specified by using the syntax .+2d/3d, which says that you want to do the task at least every three days, but at most every two days.\n  State logging for the DONE state is enabled, in order for historical data to be represented in the consistency graph. If it is not enabled it is not an error, but the consistency graphs are largely meaningless.\n  To give you an idea of what the above rules look like in action, here\u0026rsquo;s an actual habit with some history:\n** TODO Shave SCHEDULED: \u0026lt;2009-10-17 Sat .+2d/4d\u0026gt; :PROPERTIES: :STYLE: habit :LAST_REPEAT: [2009-10-19 Mon 00:36] :END: - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-10-15 Thu] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-10-12 Mon] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-10-10 Sat] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-10-04 Sun] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-10-02 Fri] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-09-29 Tue] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-09-25 Fri] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-09-19 Sat] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-09-16 Wed] - State \u0026#34;DONE\u0026#34; from \u0026#34;TODO\u0026#34; [2009-09-12 Sat] Graph show The \u0026lsquo;Org agenda view\u0026rsquo; displays habits that are due today, indicating consistency with colour. In particular, it shows overdue days in red, so you can get the Seinfeld-esque pleasure/commitment-device of not breaking the chain.\nReference  https://sachachua.com/blog/2012/05/org-mode-and-habits/ https://orgmode.org/manual/Tracking-your-habits.html  Read more  https://sachachua.com/blog/2013/06/how-i-use-emacs-org-mode-for-my-weekly-reviews/  ","permalink":"https://jason.haikebang.com/posts/use-org-mode-to-track-your-habits/","tags":null,"title":"Use Org-mode to track your habits"},{"categories":null,"contents":"Repeated tasks Some tasks need to be repeated again and again, this is called \u0026lsquo;Repeated Tasks\u0026rsquo; here.\nThe repeater Org mode helps to organize repeated tasks using a so-called repeater in a \u0026lsquo;DEADLINE\u0026rsquo;, \u0026lsquo;SCHEDULED\u0026rsquo;, or plain timestamps. In the following example:\n** TODO Pay the rent DEADLINE: \u0026lt;2005-10-01 Sat +1m\u0026gt; the +1m is a repeater; the intended interpretation is that the task has a deadline on \u0026lsquo;\u0026lt;2005-10-01 Sat\u0026gt;\u0026rsquo; and repeats itself every (one) month starting from that time. You can use yearly, monthly, weekly, daily and hourly repeat cookies by using the y, m, w, d and h letters1. If you need both a repeater and a special warning period in a deadline entry, the repeater should come first and the warning period last,\nDEADLINE: \u0026lt;2005-10-01 Sat +1m -3d\u0026gt;    Repeater Interpretation     .+xy repeat in x h/d/w/m/y from the last time I marked it done   ++xy repeat in at least x h/d/w/m/y from the last time I marked it done, And keep it on the same day of the week move the due date into the future by increments of h/d/w/m/y. 2    Tracking your habits -\u0026gt; Use Org-mode to track your habits\nReference  https://orgmode.org/manual/Repeated-tasks.html https://victor72.github.io/blog/2016/06/20/with-org-page-manage-lives/  Read more  https://orgmode.org/manual/Tracking-your-habits.html https://sspai.com/post/61282    There does not seem to be support for hourly repeater(at least yet for Org 9.3). (via) \u0026#x21a9;\u0026#xfe0e;\n If the due date, after being moved forward x h/d/w/m/y is still in the past, adjust it by however many h/d/w/m/y needed to get it into the future. For the w, the day of the week is kept constant. (via) \u0026#x21a9;\u0026#xfe0e;\n   ","permalink":"https://jason.haikebang.com/posts/org-mode-repeated-tasks/","tags":null,"title":"Org-mode Repeated Tasks"},{"categories":["Git"],"contents":"Background  I\u0026rsquo;ve got a git repository that I make automated commits multiple times a day, but now the local git repository is getting bigger and bigger. I\u0026rsquo;m wondering what the easiest way would be to slim down my local repository. Is there a way to remove older commits to slim down my repository size?\n Solution   Get the commits which you need to keep, like the master branch starting from this year,\ngit log --oneline --since=\u0026#34;2021-01-01\u0026#34; master Then you will get the commits like below,\nd1fc497 (HEAD -\u0026gt; master, origin/master, origin/HEAD) message5 ac89b87 message4 8c3e839 message3 d4ffc42 message2 3f1d63a message1 The first/older commit 3f1d63a will be used in the following step.\n  Checkout an orphan branch from the first commit you want to keep(as the commit 3f1d63a from above):\ngit checkout --orphan 2021 3f1d63a git commit -m \u0026#39;init commit\u0026#39; Now the 2021 branch will only contains the commits changes starting from 3f1d63a.\n  Rebase1 all the last commits starting from 3f1d63a on master branch, reapply them on top of the 2021 branch, and push 2021,\ngit rebase --onto 2021 3f1d63a master git push origin 2021   Remove the unused local branch, like master branch,\ngit branch -D master   Cleanup unnecessary files and optimize the local repository,\ngit gc --prune=now --aggressive The above command will remove all refs and inaccessible commits in the repository which are older than two weeks. --aggressive will help more time optimizing it.\n  Git has a feature called reflog that helps to track Git refs in the local repo, it has an internal garbage collection mechanism to remove old refs in Git, but there is also a manual mechanism to remove old refs.\ngit reflog expire --expire=1.month.ago The above command will remove all refs that are older than one month, you can mention whatever value you feel safe.\n  Reference  https://stackoverflow.com/questions/47609827/how-to-make-my-git-repo-smaller https://stackoverflow.com/questions/2116778/reduce-git-repository-size https://medium.com/@sangeethkumar.tvm.kpm/cleaning-up-a-git-repo-for-reducing-the-repository-size-d11fa496ba48 https://git-scm.com/docs/git-gc/ https://www.atlassian.com/git/tutorials/git-gc https://railsware.com/blog/git-housekeeping-tutorial-clean-up-outdated-branches-in-local-and-remote-repositories/ https://devconnected.com/how-to-clean-up-git-branches/ https://nickymeuleman.netlify.app/blog/delete-git-branches https://www.fizerkhan.com/blog/posts/clean-up-your-local-branches-after-merge-and-delete-in-github https://gitbetter.substack.com/p/how-to-clean-up-the-git-repo-and  Read more  https://support.atlassian.com/bitbucket-cloud/docs/maintain-a-git-repository/ https://stackoverflow.com/questions/34657031/how-do-you-remove-a-branch-and-all-of-its-history-locally-and-remotely https://blog.lilydjwg.me/2011/4/22/tried-the-nuclear-option-filter-branch-of-git-the-first-time.26331.html https://www.cnblogs.com/sdream/p/9480963.html https://coderwall.com/p/x3jmig/remove-all-your-local-git-branches-but-keep-master https://stackoverflow.com/questions/13064613/how-to-prune-local-tracking-branches-that-do-not-exist-on-remote-anymore https://superuser.com/questions/283309/how-to-delete-the-git-reference-refs-original-refs-heads-master    Refer to https://git-scm.com/docs/git-rebase for the git rebase - Reapply commits on top of another base tip. \u0026#x21a9;\u0026#xfe0e;\n   ","permalink":"https://jason.haikebang.com/posts/make-git-repo-smaller/","tags":["git"],"title":"Make Git Repository Smaller"},{"categories":null,"contents":"《奇特的一生》是一本传记体小说，描述了俄罗斯科学家柳比歇夫如何运用时间统计法度过了他的一生。所谓时间统计法，说起来实在不起眼：统计自己做每件事情的纯时间，“工作中的任何间歇，我都要创除。我计算的是纯时间，”柳比歇夫写道，“纯时间要比毛时间少得多。所谓毛时间，就是你花在这项工作上的时间。” 柳比歇夫典型的时间统计日记是这样的：\n 乌里扬诺夫斯克。1964 年 4 月 8 日。分类昆虫学：鉴定袋蛾，结束——2 小时 20 分。开始写关于袋蛾的报告——1 小时 5 分（1.0）。 附加工作：给达维陀娃和布里亚赫尔写信，6 页——3 小时 20 分（0.5）。 路途往返——0.5。 休息——剃胡子。《乌里扬诺夫斯克真理报》——15 分，《消息报》——10 分，《文学报》——20分；阿・托尔斯泰的《吸血鬼》，66 页——1 小时 30 分。听里姆斯基・柯萨科夫的《沙皇的未婚妻》。 基本工作合计——6 小时 45 分。  其中记录了一天当中各项活动花费的“纯时间”，最后合计了第一类工作（科研活动）的时间。此外，每月和每年，柳比歇夫都对自己的时间统计日记进行进一步汇总统计，将自己时间的花费清楚明了地列于眼前。正是这样一个简单的方法帮助柳比歇夫实现了“奇特的一生”。通常，柳比歇夫每天能有七、八个小时的纯学术工作时间，最高纪录是十一小时三十分。\n我们每个人一天的纯工作时间到底有多少呢？约摸估算一番，我想能达到柳比歇夫这个数字的少之又少。两小时？三小时？事实上，因为人对自己时间利用的估计是如此的不靠谱，实际的纯工作时间可能比你想像得还要少得多。物理学家 Michael Nielsen 在一篇文章中写道：\n 一个同事曾告诉我，他的一个朋友在一段时间里用码表记录自己每周做研究工作的时间。令他震惊的是，除去每天当中他陷入的所有其他事情——中断，邮件，上网，电话，没成效的会议，和朋友聊天等，他平均每天只用了半小时在研究工作上。如果说这是许多研究者的典型情况，我并不对此感到意外。\n 彼德・德鲁克在《卓有成效的管理者》中也谈到：\n 某公司的董事长，十分肯定地对我说他的时间大致分成三个部分：1/3 用于与公司高级管理人员研讨业务；1/3 用于接待重要客户；其余 1/3 则用于参加各种社会活动。但是，等实际记录了六个星期之后，跟他原来的估计比较，结果发现在上述三个方面，他几乎没花什么时间……这份时间记录是由他的秘书记下来的，当秘书把记录送给他看时，他简直一点儿都不能相信。\n 因此，看似简单的时间统计法恰恰蕴含了深刻的力量。唯有通过实际的统计数字，我们才能自知。我刚知道这个方法时，试过在纸上记录做每件事的起止时间，但总觉得统计起来麻烦。但事实上，不做统计，根本没法发挥这个方法的真正效果。\nOrg-mode Agenda 为了使用 Org-mode 的日程表功能，首先需要把 xxx.org 加入到日程表文件中，例如 todo.org, 在配置文件（ ~/.emacs ）中写入:\n(setq org-agenda-files (list \u0026#34;~/org/todo.org\u0026#34;)) 再绑定Org-mode日程表的快捷键，\n(global-set-key \u0026#34;\\C-ca\u0026#34; \u0026#39;org-agenda) 这样按 Ctrl-c a a 就可以查看 Org-mode 的周日程表了。\n之后就可以设置 TODO 项的 Schedule，该项在当日就会显示。\n这样一来，在每天开始浏览一下所有的 TODO 项目，将今天需要完成的任务 Schedule 一下，一天中剩下的时间只要看 Day Agenda 就行了。\n计时 在 todo.org 中，移到一个条目上，按 Ctrl-c Ctrl-x Ctrl-i 即可对该条目开始计时， Ctrl-c Ctrl-x Ctrl-o 停止当前计时。如果在 Agenda 中，移到条目按 I 即可对该条目开始计时， O 即可停止计时。对于已经对这些基本功能熟练的用户，还可使用以下技巧：\n 用 global-set-key 把 org-clock-in, org-clock-out, org-clock-cancel 这三个功能绑定到全局功能下，这样就不用专门跑到一个 Org-mode 的 buffer 里计时了。 加前缀 Ctrl-u 再按 Ctrl-c Ctrl-x Ctrl-i ，可快速查看最近计时项目，进行快速计时。  计时的重点是只计纯工作时间，只要没在工作就停止计时。对于不在电脑时候的工作，可以先在纸上记录，电脑在手时再补录到 todo.org 的相应时间记录中。\n可以在 todo.org 的头部加入 #+PROPERTY: CLOCK_INTO_DRAWER t，这样，时间记录会放到一个名为 LOGBOOK 的抽屉中，平时看项目时并不展开，所以记录再多也不影响日常操作。\nTag 为了便于统计，使统计信息有意义，有必要对任务进行分类。可以使用 Tag 实现分类，在 todo.org 的文件头部写下该文件支持的 Tag，如:\n#+TAGS: { ACADEMIC(a) ENGLISH(e) SCHOOL(s) LEARNING(l) OUTPUT(p) OTHER(o) } 其中括号内代表简写快捷键，对每个 TODO 任务，按 Ctrl-c Ctrl-q 即可赋符 Tag，这样就完成了任务的分类。默认设置中，Tag 是可以继承的，即子标题自动包含父标题中含有的 Tag。\n统计 Org mode can produce quite complex reports based on the time clocking information. Such a report is called a clock table, it is formatted as one or several Org tables.\nUse org-clock-report to insert or update a clock table. When called with a prefix argument, jump to the first clock table in the current document and update it.\nHere is an example of the frame for a clock table as it is inserted into the buffer by org-clock-report:\n#+BEGIN: clocktable :maxlevel 2 :emphasize nil :scope file #+END: clocktable The  #+BEGIN line contains options to define the scope, structure, and formatting of the report.\nTo get a clock summary of the current level 1 tree, for the current day, you could write:\n#+BEGIN: clocktable :maxlevel 2 :block today :scope tree1 :link t #+END: clocktable To get a clock summary of the current level 1 of the full current buffer, for the current day, with a specific tag \u0026lsquo;example\u0026rsquo;, you could write:\n#+BEGIN: clocktable :scope file :maxlevel 2 :block today :tags t :match \u0026#34;example\u0026#34; #+END: clocktable To get a clock summary of the current level 1 of the full current buffer, for the this week, with a specific tag \u0026lsquo;example\u0026rsquo;, you could write:\n#+BEGIN: clocktable :scope file :maxlevel 2 :block thisweek :tags t :match \u0026#34;example\u0026#34; #+END: clocktable Read more -\u0026gt; https://orgmode.org/manual/The-clock-table.html\nReference  用 Org-mode 实践《奇特的一生》 Org-mode 能否实现《奇特的一生》中时间统计功能 Org-mode clock table by tag  Read more  Org Mode – Organize Your Life in Plain Text Tagging in Org – plus bonus code for timeclocks and tags! Time tracking with Org Mode and sum time per tag  ","permalink":"https://jason.haikebang.com/posts/use-org-mode-to-manage-quite-a-life/","tags":null,"title":"Use Org-mode to manage quite a life"},{"categories":null,"contents":"Install the OpenSSL OpenSSL is a built-in package on macOS, while on Linux distributions, you need to install it manually. Like Ubuntu,\napt install openssl Use openssl x509 to sign the CA   Generate a new private key and Certificate Signing Request\nmkdir cert \u0026amp;\u0026amp; cd cert openssl genrsa -out ca.key 2048 openssl req -new -sha256 -key ca.key -out ca.csr   Generate a self-signed certificate\nopenssl x509 -req -sha256 -days 3650 -in ca.csr -signkey ca.key -out ca.crt   Convert a certificate file and a private key to PKCS#12 (.p12)\nopenssl pkcs12 -export -clcerts -in ca.crt -inkey ca.key -out ca.p12 -password pass:\u0026lt;password\u0026gt;   Encode PKCS#12 as Base64\nbase64 -w 0 ca.p12   Use openssl ca to sign the CA TODO: placeholder\nReference  为 Surge 自签发 CA 根证书 The Most Common OpenSSL Commands  ","permalink":"https://jason.haikebang.com/posts/selfsigned-ca/","tags":null,"title":"Self-signed CA(Certificate Authority)"},{"categories":null,"contents":" The Zettelkasten method was made famous by Niklas Luhmann, who was a German sociologist who published over 70 books and 400 academic articles (Ahrens, 2017, pp.30). Luhmann credited his achievements to his Zettelkasten, which contained over 90,000 ideas that helped him develop topics by knitting together ideas into a cohesive whole. His books wrote themselves, idea by idea. Even after his death, Luhmann\u0026rsquo;s ideas were combined to publish more books on his behalf.\nThe word Zettelkasten is German for \u0026ldquo;slip box\u0026rdquo;, which refers to a box containing many slips of paper (Ahrens, 2017). Each slip represents a single, atomic idea that makes sense by itself, and also in combination with other ideas (similar to how our brain works, but with a better memory).\n Book -\u0026gt; 读《卡片笔记写作法》\nReference  https://www.youtube.com/watch?v=4veq2i3teVk\u0026amp;ab%5Fchannel=BielefeldUniversity https://www.youtube.com/watch?v=Pp3NMB9G7yY\u0026amp;ab%5Fchannel=CeheparCheng https://zettelkasten.de/introduction/ https://www.youtube.com/watch?v=rOSZOCoqOo8 https://medium.com/@rebeccawilliams9941/the-zettelkasten-method-examples-to-help-you-get-started-8f8a44fa9ae6  ","permalink":"https://jason.haikebang.com/posts/zettelkasten/","tags":null,"title":"Zettelkasten Note-taking Method"},{"categories":null,"contents":"The Note Type of Zettelkasten  Fleeting Notes Literature Notes Permanent Notes Project Notes  The Note Type of Your Project Compare to the note type of Zettelkasten, the note type of our project should be different as project notes/items are normally generated and used as project goes by, and the notes can be abandoned/archived once the project is over, at least for most of notes/items.\nIn this case, we can say most of them are Fleeting Notes, for the notes can be considered as Literature or Permanent ones, those should be taken carefully to the personal notebook but not the project notebook.\nThe Principles of Project with Org-roam  One note for one task/activity Keep the persons involved in the note Remove/archive the note once the task/activity is done  ","permalink":"https://jason.haikebang.com/posts/org-roam-and-project/","tags":null,"title":"Use Org-roam to manage project in an effective way"},{"categories":null,"contents":"Bullet Journal  A bullet journal is a method of personal organization developed by designer Ryder Carroll. The system organizes scheduling, reminders, to-do lists, brainstorming, and other organizational tasks into a single notebook.\n -\u0026gt; https://bulletjournal.com\nOrg-mode Org-roam  Org-roam is a tool for network thought. It reproduces some of Roam Research\u0026rsquo;s features within the all-powerful Org-mode.\nOrg-roam is a solution for effortless non-hierarchical note-taking with Org-mode. With Org-roam, notes flow naturally, making note-taking fun and easy. Org-roam keeps closely to Org syntax, and will work for anyone already using Org-mode for their personal wiki.\n -\u0026gt; https://www.orgroam.com/manual.html\nRead more,\n Use Org-roam to manage project in an effective way Zettelkasten Note-taking Method  Read More  How to Take Smart Notes?  Discuss Community  https://haikebang.org/c/note-taking/  ","permalink":"https://jason.haikebang.com/posts/note-taking/","tags":null,"title":"Note-taking"},{"categories":null,"contents":"How to execute veracrypt command line? The command is actually /Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt.\nWhile there should always be an elegant way to use it!\nYou can set up a symbolic link named veracrypt to the executable. The following will work in a terminal,\nmkdir -p ~/bin ; # \u0026lt;\u0026lt;-- if it doesn\u0026#39;t exist already ln -s /Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt ~/bin/veracrypt You can then invoke it to get help with (the -t is for text-only mode):\nPATH=\u0026#34;$HOME/bin:$PATH\u0026#34; ; # \u0026lt;\u0026lt;-- if not already on your search path veracrypt -t -h Start using it, like:\nveracrypt -m ro -k \u0026lt;keyfile\u0026gt; \u0026lt;volume\u0026gt; # mount the volume with keyfile in read-only mode Reference  https://apple.stackexchange.com/questions/230520/how-to-execute-veracrypt-on-the-command-line https://sourceforge.net/p/veracrypt/discussion/technical/thread/5dfac090/  ","permalink":"https://jason.haikebang.com/posts/veracrypt-on-macos/","tags":null,"title":"VeraCrypt on MacOS"},{"categories":null,"contents":" Spinnaker is a free and open-source continuous delivery software platform originally developed by Netflix and extended by Google. It is designed to work with Kubernetes, Google Cloud Platform, AWS, Microsoft Azure and Oracle Cloud. Spinnaker was developed by Netflix as a successor to the internally developed Asgard.\n -\u0026gt; https://spinnaker.io/\n","permalink":"https://jason.haikebang.com/posts/spinnaker/","tags":null,"title":"Spinnaker"},{"categories":null,"contents":"Arch Linux with Emacs Boot the VM on Arch Linux iso and then run the command,\nwget https://raw.githubusercontent.com/jsntn/spartan-arch/my-version/install.sh -O install.sh bash install.sh [user] [password] [fast] All arguments are optional and will be prompted for if not passed on invocation:\n [user] is your username [password] is what you want the root and user password to be [fast] is boolean 1 or 0 and controls using rankmirrors during set up which will be slow  The install.sh script will run and then reboot the computer once done.\n-\u0026gt; https://github.com/jsntn/spartan-arch/tree/my-version\nInstall Packages Load Linux dotfiles ","permalink":"https://jason.haikebang.com/posts/emacs-on-arch-linux/","tags":null,"title":"Emacs on Arch Linux"},{"categories":null,"contents":"Reference  https://stackoverflow.com/questions/12339671/how-to-compile-python-script-to-binary-executable  ","permalink":"https://jason.haikebang.com/posts/compile-python-to-binary/","tags":null,"title":"Compile Python Script to Binary Executable"},{"categories":["Emacs"],"contents":"Installation List the Emacs installation on Windows platform.\nNative Emacs VirtualBox with Emacs -\u0026gt; Emacs on Arch Linux\nDockerized Emacs Cygwin/MinGW with Emacs Chololatey Software choco install emacs Unix Utilities Encryption Shell/Term Debug If you do M-x toggle-debug-on-error, you should get a backtrace that might show where the error is occurring.\nRead more  https://www.gnu.org/software/emacs/manual/html%5Fmono/efaq-w32.html#Other-useful-ports https://www.emacswiki.org/emacs/EmacsMsWindowsIntegration http://ergoemacs.org/emacs/emacs%5Fenv%5Fvar%5Fpaths.html https://emacs.stackexchange.com/questions/27326/gui-emacs-sets-the-exec-path-only-from-windows-environment-variable-but-not-from  Reference ","permalink":"https://jason.haikebang.com/posts/emacs-on-windows/","tags":["emacs"],"title":"Emacs on Windows"},{"categories":null,"contents":"A Makefile example,\nABC.tar.gz.md5: ABC.tar.gz md5sum ABC.tar.gz \u0026gt; ABC.tar.gz.md5 ABC.tar.gz: tar -czf ABC.tar.gz ABC/  Reference:\n http://www.ruanyifeng.com/blog/2015/02/make.html  ","permalink":"https://jason.haikebang.com/posts/make/","tags":null,"title":"How to use `make`?"},{"categories":["Linux"],"contents":"Pacage Manager Install Chocolatey on Windows by following the method from https://chocolatey.org/install\nInstall the Unix Utilities, like make,\nchoco install make Read more\u0026hellip; How to use `make`?\nRecommended Packages  make git gnuwin32-coreutils.install  Reference  http://ergoemacs.org/emacs/emacs%5Fmswin.html http://xahlee.info/mswin/xah%5Fwindows%5Fsetup.html http://xahlee.info/mswin/Windows%5Fsoftware.html  ","permalink":"https://jason.haikebang.com/posts/unix-utilities-on-windows/","tags":["unix"],"title":"Unix Utilities on Windows"},{"categories":null,"contents":"About SAFe\nThe Seven Core Competencies of Business Agility  Team and Technical Agility Agile Product Delivery Enterprise Solution Delivery Lean Portfolio Management Organizational Agility Continuous Learning Culture Lean-Agile Leadership   It is not enough that management commit themselves to quality and productivity, they must know what it is they must do.\nSuch a responsibility cannot be delegated.\n\u0026ndash; W. Edwards Deming\n Measure and Grow Go download the \u0026ldquo;SAFe Business Agility Assessment\u0026rdquo; from here.\nReference  https://www.scaledagileframework.com/business-agility/ https://www.scaledagileframework.com/measure-and-grow/  ","permalink":"https://jason.haikebang.com/posts/7-core-competencies/","tags":null,"title":"The Seven Core Competencies of Business Agility"},{"categories":null,"contents":" Scaled Agile Framework® (SAFe®) empowers complex organizations to achieve the benefits of Lean-Agile software and systems development at scale.\n SAFe is the world’s leading framework for scaling Agile across the enterprise. Used by hundreds of the world’s largest organizations, SAFe sustains and drives faster time-to-market, dramatic increases in productivity and quality, and improvement in employee engagement.\nSAFe is designed to help businesses continuously and more efficiently deliver value on a regular and predictable schedule. It provides a knowledge base of proven, integrated principles and practices to support enterprise agility.\n Those who master large-scale software delivery will define the economic landscape of the 21st century. - Mik Kersten\n  Reference\n https://www.scaledagile.com/enterprise-solutions/what-is-safe/  ","permalink":"https://jason.haikebang.com/posts/safe/","tags":null,"title":"What is SAFe?"},{"categories":null,"contents":" In the world of software management there exists a dread place called \u0026ldquo;dependency hell.\u0026rdquo;\nThe bigger your system grows and the more packages you integrate into your software, the more likely you are to find yourself, one day, in this pit of despair.\n\u0026ndash; semver.org\n Summary Given a version number MAJOR.MINOR.PATCH, increment the:\n MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards compatible manner, and PATCH version when you make backwards compatible bug fixes.  Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.\nSemantic Versioning Specification (SemVer)  A normal version number MUST take the form X.Y.Z where X, Y, and Z are non-negative integers, and MUST NOT contain leading zeroes. X is the major version, Y is the minor version, and Z is the patch version. Each element MUST increase numerically. For instance: 1.9.0 -\u0026gt; 1.10.0 -\u0026gt; 1.11.0. Once a versioned package has been released, the contents of that version MUST NOT be modified. Any modifications MUST be released as a new version. Major version zero (0.y.z) is for initial development. Anything MAY change at any time. The public API SHOULD NOT be considered stable. Version 1.0.0 defines the public API. The way in which the version number is incremented after this release is dependent on this public API and how it changes. Patch version Z (x.y.Z | x \u0026gt; 0) MUST be incremented if only backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior. Minor version Y (x.Y.z | x \u0026gt; 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API. It MUST be incremented if any public API functionality is marked as deprecated. It MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented. Major version X (X.y.z | X \u0026gt; 0) MUST be incremented if any backwards incompatible changes are introduced to the public API. It MAY also include minor and patch level changes. Patch and minor version MUST be reset to 0 when major version is incremented. A pre-release version MAY be denoted by appending a hyphen and a series of dot separated identifiers immediately following the patch version. Identifiers MUST comprise only ASCII alphanumerics and hyphens [0-9A-Za-z-]. Identifiers MUST NOT be empty. Numeric identifiers MUST NOT include leading zeroes. Pre-release versions have a lower precedence than the associated normal version. A pre-release version indicates that the version is unstable and might not satisfy the intended compatibility requirements as denoted by its associated normal version. Examples: 1.0.0-alpha, 1.0.0-alpha.1, 1.0.0-0.3.7, 1.0.0-x.7.z.92, 1.0.0-x-y-z.–.  FAQ How do I know when to release 1.0.0? If your software is being used in production, it should probably already be 1.0.0. If you have a stable API on which users have come to depend, you should be 1.0.0. If you’re worrying a lot about backwards compatibility, you should probably already be 1.0.0.\nReference  https://semver.org https://en.wikipedia.org/wiki/Software%5Fversioning What “version naming convention” do you use? Software Build \u0026amp; Release Versioning Strategy Semver cheatsheet Semantic Versioning Cheatsheet Semver check https://docs.npmjs.com/about-semantic-versioning npm semver calculator 软件版本命名规范及各阶段说明  ","permalink":"https://jason.haikebang.com/posts/semantic-versioning/","tags":["software"],"title":"Semantic Versioning"},{"categories":null,"contents":"For a Linux-based image to have full functionality in an OpenStack Compute cloud, there are a few requirements. For some of these, you can fulfill the requirements by installing the cloud-init package. Read this section before you create your own image to be sure that the image supports the OpenStack features that you plan to use.\n  Disk partitions and resize root partition on boot (cloud-init)\nWhen you create a Linux image, you must decide how to partition the disks. The choice of partition method can affect the resizing functionality, as described in the following sections.\nThe size of the disk in a virtual machine image is determined when you initially create the image. However, OpenStack lets you launch instances with different size drives by specifying different flavors. For example, if your image was created with a 5 GB disk, and you launch an instance with a flavor of m1.small. The resulting virtual machine instance has, by default, a primary disk size of 20 GB. When the disk for an instance is resized up, zeros are just added to the end.\nYour image must be able to resize its partitions on boot to match the size requested by the user. Otherwise, after the instance boots, you must manually resize the partitions to access the additional storage to which you have access when the disk size associated with the flavor exceeds the disk size with which your image was created.\nDepending on your distribution, the simplest way to support this is to install in your image:\n the cloud-init package the cloud-utils package, which, on Ubuntu and Debian, also contains the growpart tool for extending partitions  With these packages installed, the image performs the root partition resize on boot. For example, in the /etc/rc.local file.\nIf you can install the cloud-init and cloud-utils packages, we recommend that when you create your images, you create a single ext3 or ext4 partition (not managed by LVM).\n Reference:\n How to expand storage ( /dev/vda1 ) so it takes up the entire disk    No hard-coded MAC address information\nYou must remove the network persistence rules in the image because they cause the network interface in the instance to come up as an interface other than eth0. This is because your image has a record of the MAC address of the network interface card when it was first installed, and this MAC address is different each time the instance boots. You should alter the following files:\n Replace /etc/udev/rules.d/70-persistent-net.rules with an empty file (contains network persistence rules, including MAC address). Replace /lib/udev/rules.d/75-persistent-net-generator.rules with an empty file (this generates the file above). Remove the HWADDR line from /etc/sysconfig/network-scripts/ifcfg-eth0 on Fedora-based images.  Note: If you delete the network persistent rules files, you may get a udev kernel warning at boot time, which is why we recommend replacing them with empty files instead.\n  SSH server running\n Ubuntu Linux install OpenSSH server    Disable firewall\n$ sudo ufw status [sudo] password for linuxconfig: Status: inactive   Access instance using ssh public key (cloud-init)\n  Process user data and other metadata (cloud-init)\n  Paravirtualized Xen support in Linux kernel (Xen hypervisor only with Linux kernel version \u0026lt; 3.0)\n  Manage the /etc/hosts and /etc/hostname by /etc/cloud/cloud.cfg\npreserve_hostame: false # if you do not change /etc/hostname, it will be updated with the cloud # provided hostname on each boot. If you make a change, then manual # maintenance takes over, and cloud-init will not modify it. (via link)\nmanage_etc_hosts: localhost # cloud-init will generally own the 127.0.1.1 entry, and will update it to the # hostname and fqdn on every boot. All other entries will be left as is. # \u0026#39;ping `hostname`\u0026#39; will ping 127.0.1.1 (via link)\nReference:\n Set Hostname Update Etc Hosts    Delete the terminal command history\n$ sudo -i # rm ~/.bash_history # history -c # exit $ rm ~/.bash_history $ history -c $ exit  How To Clear Shell History In Ubuntu Linux    Wipe free disk space\n Export small .qcow file How to wipe free disk space in Linux? How to wipe a hard drive clean in Linux?    Convert the format of image\n convert .img to .qcow2   qemu-img convert -f raw ubuntu.img -O qcow2 ubuntu.qcow2  convert .vdi to .qcow2   qemu-img convert -f vdi ubuntu.vdi -O qcow2 ubuntu.qcow2 Reference:\n How To Convert VirtualBox Disk Image (VDI) and img to Qcow2 format    Packaging\nmd5sum ubuntu.qcow2 \u0026gt; ubuntu.qcow2.md5 tar -czf ubuntu.qcow2.tar.gz ubuntu.qcow2 ubuntu.qcow2.md5   Reference  Image requirements  ","permalink":"https://jason.haikebang.com/posts/how-to-make-image/","tags":["openstack"],"title":"How to make image?"},{"categories":null,"contents":"Introduction  As an ordinary engineer, I was writing the DR scripts then in Japan.\n The technology updating is fast and exciting!\nI\u0026rsquo;m not young anymore, and I always hope that I can produce something memorable.\nSolution Requirements/Design/Describe the Design Before we started the realization, we took much time on the design. Writing a program is the different concept in design software. Design is the place where software quality is established. Before starting of designing software, the requirements should be analyzed and specified first.\nIn the software design process, design engineering is the one of the concept. While beginning software, requirements have been analyzed and modeled. This model can be accessed for quality and improved before code is generated.\nIn a software engineering context, the first need is to develop the models of program, but not the program themselves.\nSoftware design is different from coding. At first it is very clear that, design is not coding and coding is not design. It is created from program components.\nDesign is the description of the logic, which is used in solving the problem. Coding is the language specification which is implementation of the design. It runs on the computer and, provides the expected result. (via https://www.chegg.com/homework-help/software-engineering-8th-edition-chapter-12-solutions-9780078022128)\nWhat is a good design? A good design should be the process of envisioning and defining software solutions to one or more sets of problems, and you must agree that one of the main components of software design is the software requirements analysis. while in our project, it comes from part of specifications from customer, also, since what we are working is kind of CA components, that should be considered during our whole process of solution design, I mean, we need to think about making that work better based on our product, our official solution.\nOnce we have a clear picture on the requirements analysis, we should get a couple of problem lists to solve, this is important, some of them might be the items existed in the punchlist/user storys later, and each of them should be traceable and reflected in requirements and design.\nAfter that, we can continue the solution design, design is kind of process and model, if you are working within a design team, please understand that multiple designs for the same problem can exist and will exist, while if you are working as a solo player, try to explain that to yourself could be helpful for you to find something different, like Rubber Duck Debugging from The Pragmatic Programmer.\nDesign is not coding, coding is not design. Be down-to-earth. The solution should be improved over time. The solution should be as clear as possible. \u0026ldquo;A picture is worth a thousand words.\u0026rdquo; Read more -\u0026gt; What is good product? - Allen Zhang 2019\nTimeplan/GTD Time, Scope and Cost\nSprint/Milestone Split the goal into some sprints/milestones. Roadmap Risk Analysis User Story Bash OR Python  A language is a tool, that\u0026rsquo;s it. Define the stacks and version before kickoff, and keep them aligned until the end.    COMPONENT VERSION     OS Ubuntu 16.04.7 LTS 64-bit PC (AMD64) server   Docker 20.10.6   Jenkins 2.249.1   Ansible 2.7.0   Python 3.5.2      Team Team Setup  SA Developer Tester  -\u0026gt; Who will be responsible for the deliverables packaging? the documents? and the monitoring?\nCommunication An effective communication is the precondition to effective co-operation. -\u0026gt; Is English your official language in your team?\nRole and Responsibility Clear Role is not enough, define what his responsibility should be.\nTools Using effective tools to manage the projects.\nGit, Pipeline, Jira, Teams\u0026hellip; Editor OR IDE  Vim Emacs etc.  Start Coding Keep monitoring/following-up during coding. The realization and design should always be aligned, monitored, as always.\nThe assigned tasks should be monitored and followed up.\nWe must have difficult time. Testing Use CI/CD.\nChange Request Packaging and Release  About The Deployment About Semantic Versioning  Documents Presentation and Handover Support Phase  # EOF: You\u0026rsquo;ve come a long way.\n","permalink":"https://jason.haikebang.com/posts/dr/","tags":null,"title":"DR"},{"categories":null,"contents":"Installation sudo add-apt-repository -y ppa:teejee2008/timeshift sudo apt-get update sudo apt-get install timeshift via link\nOperations sudo timeshift --create sudo timeshift --list sudo timeshift --restore --snapshot \u0026#34;2020-02-19_18-32-36\u0026#34; sudo timeshift --delete --snapshot \u0026#39;2014-10-12_16-29-08\u0026#39; via link\nRead More  Restore the snapshot on Linux  ","permalink":"https://jason.haikebang.com/posts/timeshift-on-ubuntu/","tags":null,"title":"Timeshift on Ubuntu"},{"categories":null,"contents":"Use Timeshift to manage the snapshot on Ubuntu.\n","permalink":"https://jason.haikebang.com/posts/linux/","tags":null,"title":"Linux"},{"categories":null,"contents":"Read more -\u0026gt; Memory Palace\n","permalink":"https://jason.haikebang.com/posts/memory/","tags":null,"title":"Memory"},{"categories":null,"contents":"About ZOOM https://www.zhihu.com/question/279930451/answer/411034575\nBest lossy audio formats  We spoke to Ben Westgarth, senior audio software engineer at NCH Software, about the best lossy audio formats for archiving a music collection. He told us there\u0026rsquo;s a contentious debate about the topic among industry professionals and casual users, but there is a clear winner in terms of file size to sound quality ratio. \u0026ldquo;It is widely considered that AAC is a superior format - it can compress to a smaller size for the same quality when compared to MP3.\u0026rdquo;\nThe primary concern with converting to AAC instead of MP3 is compatibility with media players. AAC was developed by a group of companies, including Nokia, Dolby and Sony. It\u0026rsquo;s promoted as a successor to the MP3 file format and is used by huge streaming platforms such as Apple and YouTube. However, it still can\u0026rsquo;t match the ubiquitous device support that MP3 offers. Although AAC is a better lossy format in terms of audio quality, Westgarth strongly suggests against converting MP3 files to AAC. \u0026ldquo;In this scenario you are taking one lossy format and re-compressing it into another, and it will only reduce the quality of your audio - not improve it!\u0026rdquo; (via)\n Reference  https://www.toptenreviews.com/best-audio-converter-software https://en.wikipedia.org/wiki/List%5Fof%5Faudio%5Fconversion%5Fsoftware  ","permalink":"https://jason.haikebang.com/posts/recording/","tags":null,"title":"Recording"},{"categories":null,"contents":"EDC\n Everyday Carry\n Brands  Fat Bear Pelican UAG  Reference  https://www.zhihu.com/question/19808099  ","permalink":"https://jason.haikebang.com/posts/edc/","tags":null,"title":"EDC"},{"categories":null,"contents":"Encryption is the method by which information is converted into secret code that hides the information\u0026rsquo;s true meaning. The science of encrypting and decrypting information is called cryptography. In computing, unencrypted data is also known as plaintext, and encrypted data is called ciphertext.\nCryptomator https://cn.apkjam.com/cryptomator.html\nhttps://jsntn.com/software/portable-cryptomator.html\nPassword KeePass https://haikebang.com/passphrase.html\nSaferoom https://cn.apkjam.com/60s/saferoom.html\nTrueCrypt/VeraCrypt/EDS/CryptoDisk  TrueCrypt is not secure EDS VeraCrypt on MacOS Windows VeraCrypt Volume Launcher  Read More https://haikebang.com/secure-portable.html\n","permalink":"https://jason.haikebang.com/posts/encryption/","tags":["encryption"],"title":"Encryption"},{"categories":null,"contents":"FAQ  How to make image?  TODO What is the Cloud Image? Boot an instance from an ISO image https://docs.openstack.org/ocata/user-guide/cli-nova-launch-instance-using-ISO-image.html\nTroubleshooting The main troubleshooting method about OpenStack is checking through the logs.\nNetwork What is physical network in OpenStack? The OpenStack Networking services can either run together on the same physical server, or on separate dedicated servers, which are named according to their roles:\n Controller node - The server that runs API service. Network node - The server that runs the OpenStack Networking agents.  L2GW ","permalink":"https://jason.haikebang.com/posts/openstack/","tags":["openstack"],"title":"OpenStack"},{"categories":null,"contents":"Keystone Logs /var/log/apache2/keystone.log /var/log/apache2/keystone_access.log If you would like to check more detailed logs, go enable the debug option in /etc/keystone/keystone.conf.\nGlance Logs /var/log/apache2/glanceapi.log /var/log/apache2/glanceregistry.log If you would like to check more detailed logs, go enable the debug option in /etc/glance/*.conf.\n","permalink":"https://jason.haikebang.com/posts/openstack-logs/","tags":null,"title":"OpenStack Logs"},{"categories":null,"contents":"⊕ https://cn.apkjam.com\n","permalink":"https://jason.haikebang.com/posts/android/","tags":null,"title":"Android"},{"categories":null,"contents":"⊕https://giveupenglish.com\nLinks  The LYCE Digitization Project YouTube 上面的一些值得推荐的英语学习频道 那些值得推荐的外语学习网站 一些值得推荐的英语学习资源  ","permalink":"https://jason.haikebang.com/posts/english/","tags":null,"title":"English"},{"categories":null,"contents":"Online Tutorials https://kubernetes.io/docs/tutorials/kubernetes-basics/ https://kubernetes.io/zh/docs/tutorials/kubernetes-basics/\nCONCEPT Cluster Master Node Pod Controller ","permalink":"https://jason.haikebang.com/posts/k8s/","tags":null,"title":"Kubernetes"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","permalink":"https://jason.haikebang.com/search/","tags":null,"title":"Search Results"},{"categories":null,"contents":"","permalink":"https://jason.haikebang.com/tax/","tags":null,"title":"Taxonomies Result"}]